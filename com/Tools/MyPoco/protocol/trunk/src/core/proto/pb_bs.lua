
-- Generated By protoc-gen-lua Do not Edit

local CUR_MODULE_NAME = ...

local function load(name)
	if import then
		return import("."..name, CUR_MODULE_NAME)
	else
		return require(name)
	end
end

local protobuf = require "protobuf.protobuf"
local out_base_pb = load("pb_out_base")
local helper = require "protobuf.descriptor_helper"

local pED = protobuf.EnumDescriptor
local pEVD = protobuf.EnumValueDescriptor
local pD = protobuf.Descriptor
local pFD = protobuf.FieldDescriptor
local pM = protobuf.Message
local pfnED = helper.enumDescriptorFunc
local pfnEVD = helper.enumValueDescriptorFunc
local pfnD = helper.descriptorFunc
local pfnFD = helper.fieldDescriptorFunc
local _M = {
	ID_E = pED(),
	ID_MSG_S2C_REPLYBATTLEREPORT_EI = pEVD(),
	ID_MSG_C2S_CHECKBATTLERESULT_EI = pEVD(),
	ID_MSG_S2C_CHECKBATTLERESULT_EI = pEVD(),
	ID_MSG_C2S_CLIENTTESTBATTLE_EI = pEVD(),
	ID_MSG_S2C_CLIENTTESTBATTLE_EI = pEVD(),
	ATTR_ME = pD(),
	ATTR_TYPE_F = pFD(),
	ATTR_VALUE_F = pFD(),
	BATTLECOMBO_ME = pD(),
	BATTLECOMBO_TOKENS_F = pFD(),
	BATTLECOMBO_ATTRS_F = pFD(),
	BATTLECOMBO_LEVEL_F = pFD(),
	BATTLEUNIT_ME = pD(),
	BATTLEUNIT_ID_F = pFD(),
	BATTLEUNIT_POS_F = pFD(),
	BATTLEUNIT_ATTRS_F = pFD(),
	BATTLEUNIT_SKILLS_F = pFD(),
	BATTLEUNIT_STAR_F = pFD(),
	BATTLEUNIT_SKILL_LEVEL1_F = pFD(),
	BATTLEUNIT_SKILL_LEVEL2_F = pFD(),
	BATTLEUNIT_NAME_F = pFD(),
	BATTLEUNIT_COMMON_SKILL_ID_F = pFD(),
	BATTLEUNIT_ACTIVE_SKILL_ID_F = pFD(),
	BATTLEUNIT_HP_F = pFD(),
	BATTLEUNIT_ADVANCE_LEVEL_F = pFD(),
	BATTLEUNIT_SKIN_F = pFD(),
	BATTLEUNIT_SKIN_TS_F = pFD(),
	BATTLEUNIT_ARTIFACTID_F = pFD(),
	BATTLEUNIT_SKILL_LEVEL4_F = pFD(),
	BATTLEUNIT_CARDID_F = pFD(),
	BATTLEUNIT_DRESS_NUM_F = pFD(),
	BATTLEUNIT_WINGID_F = pFD(),
	BATTLEUNIT_ENERGY_SKILL_ID_F = pFD(),
	BATTLETEAM_ME = pD(),
	BATTLETEAM_UNITS_F = pFD(),
	BATTLETEAM_COMBO_F = pFD(),
	BATTLETEAM_FIGHT_VALUE_F = pFD(),
	BATTLETEAM_WAVE_F = pFD(),
	BATTLETEAM_IS_BOSS_F = pFD(),
	BATTLETEAM_DROPS_F = pFD(),
	BATTLETEAM_USER_F = pFD(),
	BATTLETEAM_TOTAL_HP_F = pFD(),
	BATTLETEAM_MULTIPLE_F = pFD(),
	BATTLETEAM_REBEL_TALENT_F = pFD(),
	BATTLETEAM_MONSTER_TEAM_ID_F = pFD(),
	BATTLETEAM_REBEL_ID_F = pFD(),
	BATTLETEAM_SHOWS_F = pFD(),
	BATTLETEAM_PETS_F = pFD(),
	BATTLETEAM_PASSIVE_SKILLS_F = pFD(),
	BATTLETEAM_DEMON_BOSS_MULTIPLE_F = pFD(),
	DEMONBOSSTEAMMULTIPLE_ME = pD(),
	DEMONBOSSTEAMMULTIPLE_TEAM_F = pFD(),
	DEMONBOSSTEAMMULTIPLE_MULTIPLE_F = pFD(),
	BATTLEREPORT_ME = pD(),
	BATTLEREPORT_BATTLE_ID_F = pFD(),
	BATTLEREPORT_ATK_TYPE_F = pFD(),
	BATTLEREPORT_IS_AUTO_F = pFD(),
	BATTLEREPORT_RANDOM_SEED_F = pFD(),
	BATTLEREPORT_OWN_TEAMS_F = pFD(),
	BATTLEREPORT_ENEMY_TEAMS_F = pFD(),
	BATTLEREPORT_WIN_CONDITION_F = pFD(),
	BATTLEREPORT_RANDOM_SEEDS_F = pFD(),
	BATTLEREPORT_REWARD_ID_F = pFD(),
	BATTLEREPORT_ASSISTANCE_ID_F = pFD(),
	PLAYERCOMMAND_ME = pD(),
	PLAYERCOMMAND_IDENTITY_F = pFD(),
	PLAYERCOMMAND_ID_F = pFD(),
	PLAYERCOMMAND_ATTACK_COUNT_F = pFD(),
	UNITCHECK_ME = pD(),
	UNITCHECK_IDENTITY_F = pFD(),
	UNITCHECK_POS_F = pFD(),
	UNITCHECK_HP_F = pFD(),
	BATTLEVIDEO_ME = pD(),
	BATTLEVIDEO_VERSION_F = pFD(),
	BATTLEVIDEO_BATTLE_REPORT_F = pFD(),
	BATTLEVIDEO_PLAYER_COMMAND_F = pFD(),
	BATTLERESULT_ME = pD(),
	BATTLERESULT_BATTLE_ID_F = pFD(),
	BATTLERESULT_IS_WIN_F = pFD(),
	BATTLERESULT_COMMAND_F = pFD(),
	BATTLERESULT_UNITS1_F = pFD(),
	BATTLERESULT_UNITS2_F = pFD(),
	BATTLERESULT_ROUND_F = pFD(),
	BATTLERESULT_RESULT_F = pFD(),
	BATTLERESULT_CUR_OWN_WAVE_F = pFD(),
	BATTLERESULT_CUR_ENEMY_WAVE_F = pFD(),
	BATTLERESULT_DATA_VERSION_F = pFD(),
	BATTLERESULT_OWN_NAME_F = pFD(),
	BATTLERESULT_ENEMY_NAME_F = pFD(),
	BATTLERESULT_OWN_TEAMS_F = pFD(),
	BATTLERESULT_ENEMY_TEAMS_F = pFD(),
	BATTLERESULT_ATTACK_TOTAL_DAMAGE_F = pFD(),
	BATTLEUNITRESULT_ME = pD(),
	BATTLEUNITRESULT_TYPE_F = pFD(),
	BATTLEUNITRESULT_ID_F = pFD(),
	BATTLEUNITRESULT_AVARTAR_ID_F = pFD(),
	BATTLEUNITRESULT_DAM_F = pFD(),
	BATTLEUNITRESULT_RECOVER_F = pFD(),
	BATTLEUNITRESULT_TAKE_DAM_F = pFD(),
	BRIEFREPORT_ME = pD(),
	BRIEFREPORT_OWN_TEAMS_F = pFD(),
	BRIEFREPORT_ENEMY_TEAMS_F = pFD(),
	BRIEFREPORT_IS_WIN_F = pFD(),
	BRIEFREPORT_UNITS1_F = pFD(),
	BRIEFREPORT_UNITS2_F = pFD(),
	BRIEFREPORT_ROUND_F = pFD(),
	BRIEFREPORT_RESULT_F = pFD(),
	TOKENKNIGHTSHOW_ME = pD(),
	TOKENKNIGHTSHOW_BASE_ID_F = pFD(),
	TOKENKNIGHTSHOW_SKIN_ID_F = pFD(),
	TOKENKNIGHTSHOW_SKIN_TM_F = pFD(),
	CHECKRESULT_ME = pD(),
	CHECKRESULT_BATTLE_ID_F = pFD(),
	CHECKRESULT_IS_WIN_F = pFD(),
	CHECKRESULT_CHECK_F = pFD(),
	CHECKRESULT_UNITS1_F = pFD(),
	CHECKRESULT_UNITS2_F = pFD(),
	CHECKRESULT_LOG_F = pFD(),
	CHECKRESULT_RET_F = pFD(),
	CHECKRESULT_DATA_VERSION_F = pFD(),
	S2C_REPLYBATTLEREPORT_ME = pD(),
	S2C_REPLYBATTLEREPORT_REPORT_F = pFD(),
	C2S_CHECKBATTLERESULT_ME = pD(),
	C2S_CHECKBATTLERESULT_RESULT_F = pFD(),
	S2C_CHECKBATTLERESULT_ME = pD(),
	S2C_CHECKBATTLERESULT_RET_F = pFD(),
	S2C_CHECKBATTLERESULT_RESULT_F = pFD(),
	C2S_CLIENTTESTBATTLE_ME = pD(),
	C2S_CLIENTTESTBATTLE_REPORT_F = pFD(),
	C2S_CLIENTTESTBATTLE_RESULT_F = pFD(),
	S2C_CLIENTTESTBATTLE_ME = pD(),
	S2C_CLIENTTESTBATTLE_RET_F = pFD(),
	S2C_CLIENTTESTBATTLE_RESULT_F = pFD(),
	-- enum 
	MSG_S2C_ReplyBattleReport = 20000,
	MSG_C2S_CheckBattleResult = 20001,
	MSG_S2C_CheckBattleResult = 20002,
	MSG_C2S_ClientTestBattle = 20003,
	MSG_S2C_ClientTestBattle = 20004,
}

pfnEVD(_M.ID_MSG_S2C_REPLYBATTLEREPORT_EI, {"MSG_S2C_ReplyBattleReport", 0, 20000})
pfnEVD(_M.ID_MSG_C2S_CHECKBATTLERESULT_EI, {"MSG_C2S_CheckBattleResult", 1, 20001})
pfnEVD(_M.ID_MSG_S2C_CHECKBATTLERESULT_EI, {"MSG_S2C_CheckBattleResult", 2, 20002})
pfnEVD(_M.ID_MSG_C2S_CLIENTTESTBATTLE_EI, {"MSG_C2S_ClientTestBattle", 3, 20003})
pfnEVD(_M.ID_MSG_S2C_CLIENTTESTBATTLE_EI, {"MSG_S2C_ClientTestBattle", 4, 20004})
pfnED(_M.ID_E, {"ID", ".bs.ID", {
	_M.ID_MSG_S2C_REPLYBATTLEREPORT_EI,
	_M.ID_MSG_C2S_CHECKBATTLERESULT_EI,
	_M.ID_MSG_S2C_CHECKBATTLERESULT_EI,
	_M.ID_MSG_C2S_CLIENTTESTBATTLE_EI,
	_M.ID_MSG_S2C_CLIENTTESTBATTLE_EI}})
pfnFD(_M.ATTR_TYPE_F, {"type", ".bs.Attr.type", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.ATTR_VALUE_F, {"value", ".bs.Attr.value", 2, 1, 2, false, 0, nil, nil, 4, 4})
pfnD(_M.ATTR_ME, {"Attr", ".bs.Attr", {}, {}, {_M.ATTR_TYPE_F, _M.ATTR_VALUE_F}, false, {}, nil})
pfnFD(_M.BATTLECOMBO_TOKENS_F, {"tokens", ".bs.BattleCombo.tokens", 1, 0, 3, false, {}, nil, nil, 13, 3})
pfnFD(_M.BATTLECOMBO_ATTRS_F, {"attrs", ".bs.BattleCombo.attrs", 2, 1, 3, false, {}, _M.ATTR_ME, nil, 11, 10})
pfnFD(_M.BATTLECOMBO_LEVEL_F, {"level", ".bs.BattleCombo.level", 3, 2, 3, false, {}, nil, nil, 13, 3})
pfnD(_M.BATTLECOMBO_ME, {"BattleCombo", ".bs.BattleCombo", {}, {}, {_M.BATTLECOMBO_TOKENS_F, _M.BATTLECOMBO_ATTRS_F, _M.BATTLECOMBO_LEVEL_F}, false, {}, nil})
pfnFD(_M.BATTLEUNIT_ID_F, {"id", ".bs.BattleUnit.id", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_POS_F, {"pos", ".bs.BattleUnit.pos", 2, 1, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_ATTRS_F, {"attrs", ".bs.BattleUnit.attrs", 3, 2, 3, false, {}, _M.ATTR_ME, nil, 11, 10})
pfnFD(_M.BATTLEUNIT_SKILLS_F, {"skills", ".bs.BattleUnit.skills", 4, 3, 3, false, {}, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_STAR_F, {"star", ".bs.BattleUnit.star", 5, 4, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_SKILL_LEVEL1_F, {"skill_level1", ".bs.BattleUnit.skill_level1", 6, 5, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_SKILL_LEVEL2_F, {"skill_level2", ".bs.BattleUnit.skill_level2", 7, 6, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_NAME_F, {"name", ".bs.BattleUnit.name", 8, 7, 1, false, "", nil, nil, 9, 9})
pfnFD(_M.BATTLEUNIT_COMMON_SKILL_ID_F, {"common_skill_id", ".bs.BattleUnit.common_skill_id", 9, 8, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_ACTIVE_SKILL_ID_F, {"active_skill_id", ".bs.BattleUnit.active_skill_id", 10, 9, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_HP_F, {"hp", ".bs.BattleUnit.hp", 11, 10, 1, false, 0, nil, nil, 4, 4})
pfnFD(_M.BATTLEUNIT_ADVANCE_LEVEL_F, {"advance_level", ".bs.BattleUnit.advance_level", 12, 11, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_SKIN_F, {"skin", ".bs.BattleUnit.skin", 13, 12, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_SKIN_TS_F, {"skin_ts", ".bs.BattleUnit.skin_ts", 14, 13, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_ARTIFACTID_F, {"artifactId", ".bs.BattleUnit.artifactId", 15, 14, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_SKILL_LEVEL4_F, {"skill_level4", ".bs.BattleUnit.skill_level4", 16, 15, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_CARDID_F, {"cardId", ".bs.BattleUnit.cardId", 17, 16, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_DRESS_NUM_F, {"dress_num", ".bs.BattleUnit.dress_num", 18, 17, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_WINGID_F, {"wingId", ".bs.BattleUnit.wingId", 19, 18, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNIT_ENERGY_SKILL_ID_F, {"energy_skill_id", ".bs.BattleUnit.energy_skill_id", 20, 19, 1, false, 0, nil, nil, 13, 3})
pfnD(_M.BATTLEUNIT_ME, {"BattleUnit", ".bs.BattleUnit", {}, {}, {_M.BATTLEUNIT_ID_F, _M.BATTLEUNIT_POS_F, _M.BATTLEUNIT_ATTRS_F, _M.BATTLEUNIT_SKILLS_F, _M.BATTLEUNIT_STAR_F, _M.BATTLEUNIT_SKILL_LEVEL1_F, _M.BATTLEUNIT_SKILL_LEVEL2_F, _M.BATTLEUNIT_NAME_F, _M.BATTLEUNIT_COMMON_SKILL_ID_F, _M.BATTLEUNIT_ACTIVE_SKILL_ID_F, _M.BATTLEUNIT_HP_F, _M.BATTLEUNIT_ADVANCE_LEVEL_F, _M.BATTLEUNIT_SKIN_F, _M.BATTLEUNIT_SKIN_TS_F, _M.BATTLEUNIT_ARTIFACTID_F, _M.BATTLEUNIT_SKILL_LEVEL4_F, _M.BATTLEUNIT_CARDID_F, _M.BATTLEUNIT_DRESS_NUM_F, _M.BATTLEUNIT_WINGID_F, _M.BATTLEUNIT_ENERGY_SKILL_ID_F}, false, {}, nil})
pfnFD(_M.BATTLETEAM_UNITS_F, {"units", ".bs.BattleTeam.units", 1, 0, 3, false, {}, _M.BATTLEUNIT_ME, nil, 11, 10})
pfnFD(_M.BATTLETEAM_COMBO_F, {"combo", ".bs.BattleTeam.combo", 2, 1, 2, false, nil, _M.BATTLECOMBO_ME, nil, 11, 10})
pfnFD(_M.BATTLETEAM_FIGHT_VALUE_F, {"fight_value", ".bs.BattleTeam.fight_value", 3, 2, 1, false, 0, nil, nil, 4, 4})
pfnFD(_M.BATTLETEAM_WAVE_F, {"wave", ".bs.BattleTeam.wave", 4, 3, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLETEAM_IS_BOSS_F, {"is_boss", ".bs.BattleTeam.is_boss", 5, 4, 1, false, false, nil, nil, 8, 7})
pfnFD(_M.BATTLETEAM_DROPS_F, {"drops", ".bs.BattleTeam.drops", 6, 5, 3, false, {}, out_base_pb.AWARD_ME, nil, 11, 10})
pfnFD(_M.BATTLETEAM_USER_F, {"user", ".bs.BattleTeam.user", 7, 6, 1, false, nil, out_base_pb.USERSNAPSHOT_ME, nil, 11, 10})
pfnFD(_M.BATTLETEAM_TOTAL_HP_F, {"total_hp", ".bs.BattleTeam.total_hp", 8, 7, 1, false, 0, nil, nil, 4, 4})
pfnFD(_M.BATTLETEAM_MULTIPLE_F, {"multiple", ".bs.BattleTeam.multiple", 9, 8, 1, false, 0, nil, nil, 5, 1})
pfnFD(_M.BATTLETEAM_REBEL_TALENT_F, {"rebel_talent", ".bs.BattleTeam.rebel_talent", 10, 9, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLETEAM_MONSTER_TEAM_ID_F, {"monster_team_id", ".bs.BattleTeam.monster_team_id", 11, 10, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLETEAM_REBEL_ID_F, {"rebel_id", ".bs.BattleTeam.rebel_id", 12, 11, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLETEAM_SHOWS_F, {"shows", ".bs.BattleTeam.shows", 13, 12, 3, false, {}, _M.TOKENKNIGHTSHOW_ME, nil, 11, 10})
pfnFD(_M.BATTLETEAM_PETS_F, {"pets", ".bs.BattleTeam.pets", 14, 13, 3, false, {}, nil, nil, 13, 3})
pfnFD(_M.BATTLETEAM_PASSIVE_SKILLS_F, {"passive_skills", ".bs.BattleTeam.passive_skills", 15, 14, 3, false, {}, nil, nil, 13, 3})
pfnFD(_M.BATTLETEAM_DEMON_BOSS_MULTIPLE_F, {"demon_boss_multiple", ".bs.BattleTeam.demon_boss_multiple", 16, 15, 1, false, nil, _M.DEMONBOSSTEAMMULTIPLE_ME, nil, 11, 10})
pfnD(_M.BATTLETEAM_ME, {"BattleTeam", ".bs.BattleTeam", {}, {}, {_M.BATTLETEAM_UNITS_F, _M.BATTLETEAM_COMBO_F, _M.BATTLETEAM_FIGHT_VALUE_F, _M.BATTLETEAM_WAVE_F, _M.BATTLETEAM_IS_BOSS_F, _M.BATTLETEAM_DROPS_F, _M.BATTLETEAM_USER_F, _M.BATTLETEAM_TOTAL_HP_F, _M.BATTLETEAM_MULTIPLE_F, _M.BATTLETEAM_REBEL_TALENT_F, _M.BATTLETEAM_MONSTER_TEAM_ID_F, _M.BATTLETEAM_REBEL_ID_F, _M.BATTLETEAM_SHOWS_F, _M.BATTLETEAM_PETS_F, _M.BATTLETEAM_PASSIVE_SKILLS_F, _M.BATTLETEAM_DEMON_BOSS_MULTIPLE_F}, false, {}, nil})
pfnFD(_M.DEMONBOSSTEAMMULTIPLE_TEAM_F, {"team", ".bs.DemonBossTeamMultiple.team", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.DEMONBOSSTEAMMULTIPLE_MULTIPLE_F, {"multiple", ".bs.DemonBossTeamMultiple.multiple", 2, 1, 2, false, 0, nil, nil, 13, 3})
pfnD(_M.DEMONBOSSTEAMMULTIPLE_ME, {"DemonBossTeamMultiple", ".bs.DemonBossTeamMultiple", {}, {}, {_M.DEMONBOSSTEAMMULTIPLE_TEAM_F, _M.DEMONBOSSTEAMMULTIPLE_MULTIPLE_F}, false, {}, nil})
pfnFD(_M.BATTLEREPORT_BATTLE_ID_F, {"battle_id", ".bs.BattleReport.battle_id", 1, 0, 2, false, 0, nil, nil, 4, 4})
pfnFD(_M.BATTLEREPORT_ATK_TYPE_F, {"atk_type", ".bs.BattleReport.atk_type", 2, 1, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEREPORT_IS_AUTO_F, {"is_auto", ".bs.BattleReport.is_auto", 3, 2, 1, false, false, nil, nil, 8, 7})
pfnFD(_M.BATTLEREPORT_RANDOM_SEED_F, {"random_seed", ".bs.BattleReport.random_seed", 4, 3, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEREPORT_OWN_TEAMS_F, {"own_teams", ".bs.BattleReport.own_teams", 5, 4, 3, false, {}, _M.BATTLETEAM_ME, nil, 11, 10})
pfnFD(_M.BATTLEREPORT_ENEMY_TEAMS_F, {"enemy_teams", ".bs.BattleReport.enemy_teams", 6, 5, 3, false, {}, _M.BATTLETEAM_ME, nil, 11, 10})
pfnFD(_M.BATTLEREPORT_WIN_CONDITION_F, {"win_condition", ".bs.BattleReport.win_condition", 7, 6, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEREPORT_RANDOM_SEEDS_F, {"random_seeds", ".bs.BattleReport.random_seeds", 8, 7, 3, false, {}, nil, nil, 13, 3})
pfnFD(_M.BATTLEREPORT_REWARD_ID_F, {"reward_id", ".bs.BattleReport.reward_id", 9, 8, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEREPORT_ASSISTANCE_ID_F, {"assistance_id", ".bs.BattleReport.assistance_id", 10, 9, 1, false, 0, nil, nil, 13, 3})
pfnD(_M.BATTLEREPORT_ME, {"BattleReport", ".bs.BattleReport", {}, {}, {_M.BATTLEREPORT_BATTLE_ID_F, _M.BATTLEREPORT_ATK_TYPE_F, _M.BATTLEREPORT_IS_AUTO_F, _M.BATTLEREPORT_RANDOM_SEED_F, _M.BATTLEREPORT_OWN_TEAMS_F, _M.BATTLEREPORT_ENEMY_TEAMS_F, _M.BATTLEREPORT_WIN_CONDITION_F, _M.BATTLEREPORT_RANDOM_SEEDS_F, _M.BATTLEREPORT_REWARD_ID_F, _M.BATTLEREPORT_ASSISTANCE_ID_F}, false, {}, nil})
pfnFD(_M.PLAYERCOMMAND_IDENTITY_F, {"identity", ".bs.PlayerCommand.identity", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.PLAYERCOMMAND_ID_F, {"id", ".bs.PlayerCommand.id", 2, 1, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.PLAYERCOMMAND_ATTACK_COUNT_F, {"attack_count", ".bs.PlayerCommand.attack_count", 3, 2, 2, false, 0, nil, nil, 13, 3})
pfnD(_M.PLAYERCOMMAND_ME, {"PlayerCommand", ".bs.PlayerCommand", {}, {}, {_M.PLAYERCOMMAND_IDENTITY_F, _M.PLAYERCOMMAND_ID_F, _M.PLAYERCOMMAND_ATTACK_COUNT_F}, false, {}, nil})
pfnFD(_M.UNITCHECK_IDENTITY_F, {"identity", ".bs.UnitCheck.identity", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.UNITCHECK_POS_F, {"pos", ".bs.UnitCheck.pos", 2, 1, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.UNITCHECK_HP_F, {"hp", ".bs.UnitCheck.hp", 3, 2, 2, false, 0, nil, nil, 4, 4})
pfnD(_M.UNITCHECK_ME, {"UnitCheck", ".bs.UnitCheck", {}, {}, {_M.UNITCHECK_IDENTITY_F, _M.UNITCHECK_POS_F, _M.UNITCHECK_HP_F}, false, {}, nil})
pfnFD(_M.BATTLEVIDEO_VERSION_F, {"version", ".bs.BattleVideo.version", 1, 0, 2, false, 0, nil, nil, 4, 4})
pfnFD(_M.BATTLEVIDEO_BATTLE_REPORT_F, {"battle_report", ".bs.BattleVideo.battle_report", 2, 1, 2, false, nil, _M.BATTLEREPORT_ME, nil, 11, 10})
pfnFD(_M.BATTLEVIDEO_PLAYER_COMMAND_F, {"player_command", ".bs.BattleVideo.player_command", 3, 2, 3, false, {}, _M.PLAYERCOMMAND_ME, nil, 11, 10})
pfnD(_M.BATTLEVIDEO_ME, {"BattleVideo", ".bs.BattleVideo", {}, {}, {_M.BATTLEVIDEO_VERSION_F, _M.BATTLEVIDEO_BATTLE_REPORT_F, _M.BATTLEVIDEO_PLAYER_COMMAND_F}, false, {}, nil})
pfnFD(_M.BATTLERESULT_BATTLE_ID_F, {"battle_id", ".bs.BattleResult.battle_id", 1, 0, 2, false, 0, nil, nil, 4, 4})
pfnFD(_M.BATTLERESULT_IS_WIN_F, {"is_win", ".bs.BattleResult.is_win", 2, 1, 2, false, false, nil, nil, 8, 7})
pfnFD(_M.BATTLERESULT_COMMAND_F, {"command", ".bs.BattleResult.command", 3, 2, 3, false, {}, _M.PLAYERCOMMAND_ME, nil, 11, 10})
pfnFD(_M.BATTLERESULT_UNITS1_F, {"units1", ".bs.BattleResult.units1", 4, 3, 3, false, {}, _M.UNITCHECK_ME, nil, 11, 10})
pfnFD(_M.BATTLERESULT_UNITS2_F, {"units2", ".bs.BattleResult.units2", 5, 4, 3, false, {}, _M.UNITCHECK_ME, nil, 11, 10})
pfnFD(_M.BATTLERESULT_ROUND_F, {"round", ".bs.BattleResult.round", 6, 5, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLERESULT_RESULT_F, {"result", ".bs.BattleResult.result", 7, 6, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLERESULT_CUR_OWN_WAVE_F, {"cur_own_wave", ".bs.BattleResult.cur_own_wave", 8, 7, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLERESULT_CUR_ENEMY_WAVE_F, {"cur_enemy_wave", ".bs.BattleResult.cur_enemy_wave", 9, 8, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLERESULT_DATA_VERSION_F, {"data_version", ".bs.BattleResult.data_version", 10, 9, 1, false, "", nil, nil, 9, 9})
pfnFD(_M.BATTLERESULT_OWN_NAME_F, {"own_name", ".bs.BattleResult.own_name", 11, 10, 1, false, "", nil, nil, 9, 9})
pfnFD(_M.BATTLERESULT_ENEMY_NAME_F, {"enemy_name", ".bs.BattleResult.enemy_name", 12, 11, 1, false, "", nil, nil, 9, 9})
pfnFD(_M.BATTLERESULT_OWN_TEAMS_F, {"own_teams", ".bs.BattleResult.own_teams", 13, 12, 3, false, {}, _M.BATTLEUNITRESULT_ME, nil, 11, 10})
pfnFD(_M.BATTLERESULT_ENEMY_TEAMS_F, {"enemy_teams", ".bs.BattleResult.enemy_teams", 14, 13, 3, false, {}, _M.BATTLEUNITRESULT_ME, nil, 11, 10})
pfnFD(_M.BATTLERESULT_ATTACK_TOTAL_DAMAGE_F, {"attack_total_damage", ".bs.BattleResult.attack_total_damage", 15, 14, 1, false, 0, nil, nil, 4, 4})
pfnD(_M.BATTLERESULT_ME, {"BattleResult", ".bs.BattleResult", {}, {}, {_M.BATTLERESULT_BATTLE_ID_F, _M.BATTLERESULT_IS_WIN_F, _M.BATTLERESULT_COMMAND_F, _M.BATTLERESULT_UNITS1_F, _M.BATTLERESULT_UNITS2_F, _M.BATTLERESULT_ROUND_F, _M.BATTLERESULT_RESULT_F, _M.BATTLERESULT_CUR_OWN_WAVE_F, _M.BATTLERESULT_CUR_ENEMY_WAVE_F, _M.BATTLERESULT_DATA_VERSION_F, _M.BATTLERESULT_OWN_NAME_F, _M.BATTLERESULT_ENEMY_NAME_F, _M.BATTLERESULT_OWN_TEAMS_F, _M.BATTLERESULT_ENEMY_TEAMS_F, _M.BATTLERESULT_ATTACK_TOTAL_DAMAGE_F}, false, {}, nil})
pfnFD(_M.BATTLEUNITRESULT_TYPE_F, {"type", ".bs.BattleUnitResult.type", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNITRESULT_ID_F, {"id", ".bs.BattleUnitResult.id", 2, 1, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNITRESULT_AVARTAR_ID_F, {"avartar_id", ".bs.BattleUnitResult.avartar_id", 3, 2, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.BATTLEUNITRESULT_DAM_F, {"dam", ".bs.BattleUnitResult.dam", 4, 3, 1, false, 0, nil, nil, 4, 4})
pfnFD(_M.BATTLEUNITRESULT_RECOVER_F, {"recover", ".bs.BattleUnitResult.recover", 5, 4, 1, false, 0, nil, nil, 4, 4})
pfnFD(_M.BATTLEUNITRESULT_TAKE_DAM_F, {"take_dam", ".bs.BattleUnitResult.take_dam", 6, 5, 1, false, 0, nil, nil, 4, 4})
pfnD(_M.BATTLEUNITRESULT_ME, {"BattleUnitResult", ".bs.BattleUnitResult", {}, {}, {_M.BATTLEUNITRESULT_TYPE_F, _M.BATTLEUNITRESULT_ID_F, _M.BATTLEUNITRESULT_AVARTAR_ID_F, _M.BATTLEUNITRESULT_DAM_F, _M.BATTLEUNITRESULT_RECOVER_F, _M.BATTLEUNITRESULT_TAKE_DAM_F}, false, {}, nil})
pfnFD(_M.BRIEFREPORT_OWN_TEAMS_F, {"own_teams", ".bs.BriefReport.own_teams", 1, 0, 3, false, {}, _M.BATTLETEAM_ME, nil, 11, 10})
pfnFD(_M.BRIEFREPORT_ENEMY_TEAMS_F, {"enemy_teams", ".bs.BriefReport.enemy_teams", 2, 1, 3, false, {}, _M.BATTLETEAM_ME, nil, 11, 10})
pfnFD(_M.BRIEFREPORT_IS_WIN_F, {"is_win", ".bs.BriefReport.is_win", 3, 2, 2, false, false, nil, nil, 8, 7})
pfnFD(_M.BRIEFREPORT_UNITS1_F, {"units1", ".bs.BriefReport.units1", 4, 3, 3, false, {}, _M.UNITCHECK_ME, nil, 11, 10})
pfnFD(_M.BRIEFREPORT_UNITS2_F, {"units2", ".bs.BriefReport.units2", 5, 4, 3, false, {}, _M.UNITCHECK_ME, nil, 11, 10})
pfnFD(_M.BRIEFREPORT_ROUND_F, {"round", ".bs.BriefReport.round", 6, 5, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.BRIEFREPORT_RESULT_F, {"result", ".bs.BriefReport.result", 7, 6, 1, false, 0, nil, nil, 13, 3})
pfnD(_M.BRIEFREPORT_ME, {"BriefReport", ".bs.BriefReport", {}, {}, {_M.BRIEFREPORT_OWN_TEAMS_F, _M.BRIEFREPORT_ENEMY_TEAMS_F, _M.BRIEFREPORT_IS_WIN_F, _M.BRIEFREPORT_UNITS1_F, _M.BRIEFREPORT_UNITS2_F, _M.BRIEFREPORT_ROUND_F, _M.BRIEFREPORT_RESULT_F}, false, {}, nil})
pfnFD(_M.TOKENKNIGHTSHOW_BASE_ID_F, {"base_id", ".bs.TokenKnightShow.base_id", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.TOKENKNIGHTSHOW_SKIN_ID_F, {"skin_id", ".bs.TokenKnightShow.skin_id", 2, 1, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.TOKENKNIGHTSHOW_SKIN_TM_F, {"skin_tm", ".bs.TokenKnightShow.skin_tm", 3, 2, 2, false, 0, nil, nil, 13, 3})
pfnD(_M.TOKENKNIGHTSHOW_ME, {"TokenKnightShow", ".bs.TokenKnightShow", {}, {}, {_M.TOKENKNIGHTSHOW_BASE_ID_F, _M.TOKENKNIGHTSHOW_SKIN_ID_F, _M.TOKENKNIGHTSHOW_SKIN_TM_F}, false, {}, nil})
pfnFD(_M.CHECKRESULT_BATTLE_ID_F, {"battle_id", ".bs.CheckResult.battle_id", 1, 0, 2, false, 0, nil, nil, 4, 4})
pfnFD(_M.CHECKRESULT_IS_WIN_F, {"is_win", ".bs.CheckResult.is_win", 2, 1, 2, false, false, nil, nil, 8, 7})
pfnFD(_M.CHECKRESULT_CHECK_F, {"check", ".bs.CheckResult.check", 3, 2, 2, false, false, nil, nil, 8, 7})
pfnFD(_M.CHECKRESULT_UNITS1_F, {"units1", ".bs.CheckResult.units1", 4, 3, 3, false, {}, _M.UNITCHECK_ME, nil, 11, 10})
pfnFD(_M.CHECKRESULT_UNITS2_F, {"units2", ".bs.CheckResult.units2", 5, 4, 3, false, {}, _M.UNITCHECK_ME, nil, 11, 10})
pfnFD(_M.CHECKRESULT_LOG_F, {"log", ".bs.CheckResult.log", 6, 5, 1, false, "", nil, nil, 9, 9})
pfnFD(_M.CHECKRESULT_RET_F, {"ret", ".bs.CheckResult.ret", 7, 6, 1, false, 0, nil, nil, 13, 3})
pfnFD(_M.CHECKRESULT_DATA_VERSION_F, {"data_version", ".bs.CheckResult.data_version", 8, 7, 1, false, "", nil, nil, 9, 9})
pfnD(_M.CHECKRESULT_ME, {"CheckResult", ".bs.CheckResult", {}, {}, {_M.CHECKRESULT_BATTLE_ID_F, _M.CHECKRESULT_IS_WIN_F, _M.CHECKRESULT_CHECK_F, _M.CHECKRESULT_UNITS1_F, _M.CHECKRESULT_UNITS2_F, _M.CHECKRESULT_LOG_F, _M.CHECKRESULT_RET_F, _M.CHECKRESULT_DATA_VERSION_F}, false, {}, nil})
pfnFD(_M.S2C_REPLYBATTLEREPORT_REPORT_F, {"report", ".bs.S2C_ReplyBattleReport.report", 1, 0, 2, false, "", nil, nil, 12, 9})
pfnD(_M.S2C_REPLYBATTLEREPORT_ME, {"S2C_ReplyBattleReport", ".bs.S2C_ReplyBattleReport", {}, {}, {_M.S2C_REPLYBATTLEREPORT_REPORT_F}, false, {}, nil})
pfnFD(_M.C2S_CHECKBATTLERESULT_RESULT_F, {"result", ".bs.C2S_CheckBattleResult.result", 1, 0, 2, false, "", nil, nil, 12, 9})
pfnD(_M.C2S_CHECKBATTLERESULT_ME, {"C2S_CheckBattleResult", ".bs.C2S_CheckBattleResult", {}, {}, {_M.C2S_CHECKBATTLERESULT_RESULT_F}, false, {}, nil})
pfnFD(_M.S2C_CHECKBATTLERESULT_RET_F, {"ret", ".bs.S2C_CheckBattleResult.ret", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.S2C_CHECKBATTLERESULT_RESULT_F, {"result", ".bs.S2C_CheckBattleResult.result", 2, 1, 1, false, "", nil, nil, 12, 9})
pfnD(_M.S2C_CHECKBATTLERESULT_ME, {"S2C_CheckBattleResult", ".bs.S2C_CheckBattleResult", {}, {}, {_M.S2C_CHECKBATTLERESULT_RET_F, _M.S2C_CHECKBATTLERESULT_RESULT_F}, false, {}, nil})
pfnFD(_M.C2S_CLIENTTESTBATTLE_REPORT_F, {"report", ".bs.C2S_ClientTestBattle.report", 1, 0, 2, false, "", nil, nil, 12, 9})
pfnFD(_M.C2S_CLIENTTESTBATTLE_RESULT_F, {"result", ".bs.C2S_ClientTestBattle.result", 2, 1, 2, false, "", nil, nil, 12, 9})
pfnD(_M.C2S_CLIENTTESTBATTLE_ME, {"C2S_ClientTestBattle", ".bs.C2S_ClientTestBattle", {}, {}, {_M.C2S_CLIENTTESTBATTLE_REPORT_F, _M.C2S_CLIENTTESTBATTLE_RESULT_F}, false, {}, nil})
pfnFD(_M.S2C_CLIENTTESTBATTLE_RET_F, {"ret", ".bs.S2C_ClientTestBattle.ret", 1, 0, 2, false, 0, nil, nil, 13, 3})
pfnFD(_M.S2C_CLIENTTESTBATTLE_RESULT_F, {"result", ".bs.S2C_ClientTestBattle.result", 2, 1, 1, false, "", nil, nil, 12, 9})
pfnD(_M.S2C_CLIENTTESTBATTLE_ME, {"S2C_ClientTestBattle", ".bs.S2C_ClientTestBattle", {}, {}, {_M.S2C_CLIENTTESTBATTLE_RET_F, _M.S2C_CLIENTTESTBATTLE_RESULT_F}, false, {}, nil})

_M.Attr = pM(_M.ATTR_ME)
_M.BattleCombo = pM(_M.BATTLECOMBO_ME)
_M.BattleReport = pM(_M.BATTLEREPORT_ME)
_M.BattleResult = pM(_M.BATTLERESULT_ME)
_M.BattleTeam = pM(_M.BATTLETEAM_ME)
_M.BattleUnit = pM(_M.BATTLEUNIT_ME)
_M.BattleUnitResult = pM(_M.BATTLEUNITRESULT_ME)
_M.BattleVideo = pM(_M.BATTLEVIDEO_ME)
_M.BriefReport = pM(_M.BRIEFREPORT_ME)
_M.C2S_CheckBattleResult = pM(_M.C2S_CHECKBATTLERESULT_ME)
_M.C2S_ClientTestBattle = pM(_M.C2S_CLIENTTESTBATTLE_ME)
_M.CheckResult = pM(_M.CHECKRESULT_ME)
_M.DemonBossTeamMultiple = pM(_M.DEMONBOSSTEAMMULTIPLE_ME)
_M.PlayerCommand = pM(_M.PLAYERCOMMAND_ME)
_M.S2C_CheckBattleResult = pM(_M.S2C_CHECKBATTLERESULT_ME)
_M.S2C_ClientTestBattle = pM(_M.S2C_CLIENTTESTBATTLE_ME)
_M.S2C_ReplyBattleReport = pM(_M.S2C_REPLYBATTLEREPORT_ME)
_M.TokenKnightShow = pM(_M.TOKENKNIGHTSHOW_ME)
_M.UnitCheck = pM(_M.UNITCHECK_ME)


return _M