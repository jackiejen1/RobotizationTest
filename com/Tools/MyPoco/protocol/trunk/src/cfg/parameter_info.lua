---@classdef record_parameter_info
local record_parameter_info = {}


record_parameter_info.id = 0--ID
record_parameter_info.parameter = 0--参数

local parameter_info = {
   _data = {   
    [1] = {1,1,},  
    [2] = {101,1,},  
    [3] = {102,10,},  
    [4] = {103,20,},  
    [5] = {104,200,},  
    [6] = {105,200,},  
    [7] = {106,0,},  
    [8] = {107,0,},  
    [9] = {108,0,},  
    [10] = {109,0,},  
    [11] = {110,100,},  
    [12] = {111,300,},  
    [13] = {112,10,},  
    [14] = {113,203,},  
    [15] = {1001,200,},  
    [16] = {1002,100,},  
    [17] = {1003,30,},  
    [18] = {1004,30,},  
    [19] = {1005,200,},  
    [20] = {1006,15,},  
    [21] = {2001,1800,},  
    [22] = {2002,800,},  
    [23] = {2003,150,},  
    [24] = {2004,50,},  
    [25] = {2005,3,},  
    [26] = {3001,500,},  
    [27] = {3002,100,},  
    [28] = {3003,100,},  
    [29] = {3004,10,},  
    [30] = {3005,10,},  
    [31] = {3006,800,},  
    [32] = {3007,1200,},  
    [33] = {3008,50,},  
    [34] = {3009,5,},  
    [35] = {3010,3,},  
    [36] = {3011,30,},  
    [37] = {4001,200,},  
    [38] = {4002,10,},  
    [39] = {4003,100,},  
    [40] = {4004,100,},  
    [41] = {4005,5,},  
    [42] = {4006,999,},  
    [43] = {4007,999,},  
    [44] = {4008,5,},  
    [45] = {4009,5,},  
    [46] = {4010,3,},  
    [47] = {4011,20,},  
    [48] = {4012,10,},  
    [49] = {4013,5,},  
    [50] = {4014,15,},  
    [51] = {4015,1,},  
    [52] = {4016,3,},  
    [53] = {4017,5,},  
    [54] = {4018,3,},  
    [55] = {4019,1,},  
    [56] = {4020,30,},  
    [57] = {4021,5,},  
    [58] = {4022,15,},  
    [59] = {5001,10,},  
    [60] = {5002,1000,},  
    [61] = {5003,1500,},  
    [62] = {5004,50,},  
    [63] = {6001,3,},  
    [64] = {6002,10,},  
    [65] = {6003,9999,},  
    [66] = {6004,65,},  
    [67] = {6005,10,},  
    [68] = {6006,5,},  
    [69] = {6007,100,},  
    [70] = {6008,100,},  
    [71] = {6009,30,},  
    [72] = {6010,40,},  
    [73] = {6011,30,},  
    [74] = {6012,40,},  
    [75] = {6013,6,},  
    [76] = {6014,5,},  
    [77] = {6015,1,},  
    [78] = {7001,11040,},  
    [79] = {8001,30,},  
    [80] = {8002,5,},  
    [81] = {9001,100,},  
    [82] = {10004,72000,},  
    [83] = {10005,15,},  
    [84] = {10015,3,},  
    [85] = {10022,1,},  
    [86] = {10023,8,},  
    [87] = {10024,25,},  
    [88] = {10025,20,},  
    [89] = {10026,5,},  
    [90] = {10027,999,},  
    [91] = {10028,5,},  
    [92] = {10029,60,},  
    [93] = {10030,3,},  
    [94] = {10031,3,},  
    [95] = {10035,10,},  
    [96] = {10046,600,},  
    [97] = {10047,99999,},  
    [98] = {10051,9,},  
    [99] = {10055,1,},  
    [100] = {10056,100,},  
    [101] = {10057,3,},  
    [102] = {10058,2069,},  
    [103] = {10059,20,},  
    [104] = {10060,5,},  
    [105] = {10061,6,},  
    [106] = {10062,10,},  
    [107] = {10063,10,},  
    [108] = {10064,5,},  
    [109] = {10065,10700,},  
    [110] = {10066,50,},  
    [111] = {10067,7,},  
    [112] = {10068,10,},  
    [113] = {10069,5,},  
    [114] = {10070,20,},  
    [115] = {10071,6,},  
    [116] = {10072,1,},  
    [117] = {10073,50,},  
    [118] = {10074,50,},  
    [119] = {10075,3,},  
    [120] = {10076,30,},  
    [121] = {10077,60,},  
    [122] = {10078,50,},  
    [123] = {10079,801,},  
    [124] = {10080,93600,},  
    [125] = {10081,50,},  
    [126] = {10082,10,},  
    [127] = {10083,20,},  
    [128] = {10084,5,},  
    [129] = {10085,1,},  
    [130] = {10086,10,},  
    [131] = {10087,4,},  
    [132] = {10088,800,},  
    [133] = {10089,1200,},  
    [134] = {10090,20,},  
    [135] = {10091,1,},  
    [136] = {10092,20,},  
    [137] = {10093,2,},  
    [138] = {10094,2,},  
    [139] = {10095,20,},  
    [140] = {10096,11,},  
    [141] = {10097,300,},  
    [142] = {10098,5,},  
    [143] = {10099,3,},  
    [144] = {10100,1,},  
    [145] = {10111,20,},  
    [146] = {10112,6,},  
    [147] = {10113,1018,},  
    [148] = {10114,4103,},  
    [149] = {10115,300,},  
    [150] = {10116,100000000,},  
    [151] = {10117,10,},  
    [152] = {10118,800,},  
    [153] = {10119,800,},  
    [154] = {10120,2,},  
    [155] = {10121,10,},  
    [156] = {10122,400,},  
    [157] = {10123,30,},  
    [158] = {10124,1500,},  
    [159] = {10125,3000,},  
    [160] = {10126,10,},  
    [161] = {1000001,2,},  
    [162] = {11001,600,},  
    [163] = {11002,8,},  
    [164] = {11003,1200,},  
    [165] = {11004,1,},  
    [166] = {11005,100,},  
    [167] = {11006,100,},  
    [168] = {11007,30,},  
    [169] = {11008,100,},  
    [170] = {11009,200,},  
    [171] = {11010,100,},  
    [172] = {11011,100,},  
    [173] = {11012,200,},  
    [174] = {11013,200,},  
    [175] = {11014,3,},  
    [176] = {11015,3,},  
    [177] = {11016,20,},  
    [178] = {11017,2,},  
    [179] = {11018,120,},  
    [180] = {11019,10,},  
    [181] = {11020,50,},  
    [182] = {11021,9000,},  
    [183] = {11022,50,},  
    [184] = {11023,15,},  
    [185] = {11024,1500,},  
    [186] = {11025,400,},  
    [187] = {11026,1000000,},  
    [188] = {11027,3,},  
    [189] = {11028,3,},  
    [190] = {11029,6,},  
    [191] = {11030,3,},  
    [192] = {11031,20,},  
    [193] = {11032,10,},
    }
}

local __index_id = {   
    [1] = 1,  
    [101] = 2,  
    [102] = 3,  
    [103] = 4,  
    [104] = 5,  
    [105] = 6,  
    [106] = 7,  
    [107] = 8,  
    [108] = 9,  
    [109] = 10,  
    [110] = 11,  
    [111] = 12,  
    [112] = 13,  
    [113] = 14,  
    [1001] = 15,  
    [1002] = 16,  
    [1003] = 17,  
    [1004] = 18,  
    [1005] = 19,  
    [1006] = 20,  
    [2001] = 21,  
    [2002] = 22,  
    [2003] = 23,  
    [2004] = 24,  
    [2005] = 25,  
    [3001] = 26,  
    [3002] = 27,  
    [3003] = 28,  
    [3004] = 29,  
    [3005] = 30,  
    [3006] = 31,  
    [3007] = 32,  
    [3008] = 33,  
    [3009] = 34,  
    [3010] = 35,  
    [3011] = 36,  
    [4001] = 37,  
    [4002] = 38,  
    [4003] = 39,  
    [4004] = 40,  
    [4005] = 41,  
    [4006] = 42,  
    [4007] = 43,  
    [4008] = 44,  
    [4009] = 45,  
    [4010] = 46,  
    [4011] = 47,  
    [4012] = 48,  
    [4013] = 49,  
    [4014] = 50,  
    [4015] = 51,  
    [4016] = 52,  
    [4017] = 53,  
    [4018] = 54,  
    [4019] = 55,  
    [4020] = 56,  
    [4021] = 57,  
    [4022] = 58,  
    [5001] = 59,  
    [5002] = 60,  
    [5003] = 61,  
    [5004] = 62,  
    [6001] = 63,  
    [6002] = 64,  
    [6003] = 65,  
    [6004] = 66,  
    [6005] = 67,  
    [6006] = 68,  
    [6007] = 69,  
    [6008] = 70,  
    [6009] = 71,  
    [6010] = 72,  
    [6011] = 73,  
    [6012] = 74,  
    [6013] = 75,  
    [6014] = 76,  
    [6015] = 77,  
    [7001] = 78,  
    [8001] = 79,  
    [8002] = 80,  
    [9001] = 81,  
    [10004] = 82,  
    [10005] = 83,  
    [10015] = 84,  
    [10022] = 85,  
    [10023] = 86,  
    [10024] = 87,  
    [10025] = 88,  
    [10026] = 89,  
    [10027] = 90,  
    [10028] = 91,  
    [10029] = 92,  
    [10030] = 93,  
    [10031] = 94,  
    [10035] = 95,  
    [10046] = 96,  
    [10047] = 97,  
    [10051] = 98,  
    [10055] = 99,  
    [10056] = 100,  
    [10057] = 101,  
    [10058] = 102,  
    [10059] = 103,  
    [10060] = 104,  
    [10061] = 105,  
    [10062] = 106,  
    [10063] = 107,  
    [10064] = 108,  
    [10065] = 109,  
    [10066] = 110,  
    [10067] = 111,  
    [10068] = 112,  
    [10069] = 113,  
    [10070] = 114,  
    [10071] = 115,  
    [10072] = 116,  
    [10073] = 117,  
    [10074] = 118,  
    [10075] = 119,  
    [10076] = 120,  
    [10077] = 121,  
    [10078] = 122,  
    [10079] = 123,  
    [10080] = 124,  
    [10081] = 125,  
    [10082] = 126,  
    [10083] = 127,  
    [10084] = 128,  
    [10085] = 129,  
    [10086] = 130,  
    [10087] = 131,  
    [10088] = 132,  
    [10089] = 133,  
    [10090] = 134,  
    [10091] = 135,  
    [10092] = 136,  
    [10093] = 137,  
    [10094] = 138,  
    [10095] = 139,  
    [10096] = 140,  
    [10097] = 141,  
    [10098] = 142,  
    [10099] = 143,  
    [10100] = 144,  
    [10111] = 145,  
    [10112] = 146,  
    [10113] = 147,  
    [10114] = 148,  
    [10115] = 149,  
    [10116] = 150,  
    [10117] = 151,  
    [10118] = 152,  
    [10119] = 153,  
    [10120] = 154,  
    [10121] = 155,  
    [10122] = 156,  
    [10123] = 157,  
    [10124] = 158,  
    [10125] = 159,  
    [10126] = 160,  
    [11001] = 162,  
    [11002] = 163,  
    [11003] = 164,  
    [11004] = 165,  
    [11005] = 166,  
    [11006] = 167,  
    [11007] = 168,  
    [11008] = 169,  
    [11009] = 170,  
    [11010] = 171,  
    [11011] = 172,  
    [11012] = 173,  
    [11013] = 174,  
    [11014] = 175,  
    [11015] = 176,  
    [11016] = 177,  
    [11017] = 178,  
    [11018] = 179,  
    [11019] = 180,  
    [11020] = 181,  
    [11021] = 182,  
    [11022] = 183,  
    [11023] = 184,  
    [11024] = 185,  
    [11025] = 186,  
    [11026] = 187,  
    [11027] = 188,  
    [11028] = 189,  
    [11029] = 190,  
    [11030] = 191,  
    [11031] = 192,  
    [11032] = 193,  
    [1000001] = 161,
}

local __key_map = { 
    id = 1,
    parameter = 2,
}

local m = { 
    __index = function(t, k) 
        if k == "toObject" then
            return function()  
                local o = {}
                for key, v in pairs (__key_map) do 
                    o[key] = t._raw[v]
                end
                return o
            end 
        end
        
        assert(__key_map[k], "cannot find " .. k .. " in record_parameter_info")

        return t._raw[__key_map[k]]
    end
}


function parameter_info.getLength()
    return #parameter_info._data
end



function parameter_info.hasKey(k)
  if __key_map[k] == nil then
    return false
  else
    return true
  end
end


---
--@return @class record_parameter_info
function parameter_info.indexOf(index)
    if index == nil or not parameter_info._data[index] then
        return nil
    end
    return setmetatable({_raw = parameter_info._data[index]}, m)
end



---
--@return @class record_parameter_info
function parameter_info.get(id)
    
    return parameter_info.indexOf(__index_id[ id ])
     
end



function parameter_info.set(id, key, value)
    local record = parameter_info.get(id)
    if record then
        local keyIndex = __key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end




function parameter_info.get_index_data()
    return __index_id 
end

return  parameter_info 