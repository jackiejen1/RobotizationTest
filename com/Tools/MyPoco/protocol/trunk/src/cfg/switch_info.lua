---@classdef record_switch_info
local record_switch_info = {}


record_switch_info.id = 0--ID
record_switch_info.type = 0--胚子类型
record_switch_info.value = 0--胚子类型值
record_switch_info.group = 0--组别
record_switch_info.cost_type = 0--消耗类型
record_switch_info.cost_value = 0--消耗类型值
record_switch_info.cost_num = 0--消耗数量

local switch_info = {
   _data = {   
    [1] = {90001,4,500010,1000,3,201,10,},  
    [2] = {90002,4,500020,1000,3,201,10,},  
    [3] = {90003,4,500030,1000,3,201,10,},  
    [4] = {90004,4,500040,1000,3,201,10,},  
    [5] = {90005,4,500050,1000,3,201,10,},  
    [6] = {90006,4,500060,1000,3,201,10,},  
    [7] = {90007,4,500070,1000,3,201,10,},  
    [8] = {90008,4,500080,1000,3,201,10,},  
    [9] = {90009,4,500090,1000,3,201,10,},  
    [10] = {90010,4,500100,1000,3,201,10,},  
    [11] = {90011,4,500120,1000,3,201,10,},  
    [12] = {90012,4,500130,1000,3,201,10,},  
    [13] = {90013,4,500140,1000,3,201,10,},  
    [14] = {90014,4,500150,1000,3,201,10,},  
    [15] = {90015,4,500160,1000,3,201,10,},  
    [16] = {90016,4,500170,1000,3,201,10,},  
    [17] = {90017,4,500180,1000,3,201,10,},  
    [18] = {90018,4,500190,1000,3,201,10,},  
    [19] = {90019,4,500200,1000,3,201,10,},  
    [20] = {90020,4,500210,1000,3,201,10,},  
    [21] = {90021,4,500220,1000,3,201,10,},  
    [22] = {90022,4,500230,1000,3,201,10,},  
    [23] = {90023,4,500240,1000,3,201,10,},  
    [24] = {90024,4,510040,1000,3,201,10,},  
    [25] = {100011,4,500110,1001,3,205,20,},  
    [26] = {100012,4,510020,1001,3,205,20,},  
    [27] = {100013,4,510060,1001,3,205,20,},  
    [28] = {100014,4,510080,1001,3,205,20,},  
    [29] = {100021,4,510010,1002,3,205,20,},  
    [30] = {100022,4,510030,1002,3,205,20,},  
    [31] = {100023,4,510050,1002,3,205,20,},  
    [32] = {100024,4,510070,1002,3,205,20,},  
    [33] = {100031,4,600020,1003,3,205,20,},  
    [34] = {100032,4,600080,1003,3,205,20,},  
    [35] = {100033,4,600090,1003,3,205,20,},  
    [36] = {100034,4,600100,1003,3,205,20,},  
    [37] = {100041,4,600030,1004,3,205,20,},  
    [38] = {100042,4,600050,1004,3,205,20,},  
    [39] = {100043,4,600110,1004,3,205,20,},  
    [40] = {100044,4,600120,1004,3,205,20,},  
    [41] = {100051,4,600010,1005,3,205,25,},  
    [42] = {100052,4,600040,1005,3,205,25,},  
    [43] = {100053,4,600060,1005,3,205,25,},  
    [44] = {100054,4,600070,1005,3,205,25,},  
    [45] = {150011,4,700010,1006,3,205,30,},  
    [46] = {150012,4,700020,1006,3,205,30,},  
    [47] = {150013,4,700030,1006,3,205,30,},  
    [48] = {150014,4,700040,1006,3,205,30,},  
    [49] = {200011,8,11210,2001,3,201,10,},  
    [50] = {200012,8,11320,2001,3,201,10,},  
    [51] = {200021,8,12210,2002,3,201,10,},  
    [52] = {200022,8,12320,2002,3,201,10,},
    }
}

local __index_id = {   
    [90001] = 1,  
    [90002] = 2,  
    [90003] = 3,  
    [90004] = 4,  
    [90005] = 5,  
    [90006] = 6,  
    [90007] = 7,  
    [90008] = 8,  
    [90009] = 9,  
    [90010] = 10,  
    [90011] = 11,  
    [90012] = 12,  
    [90013] = 13,  
    [90014] = 14,  
    [90015] = 15,  
    [90016] = 16,  
    [90017] = 17,  
    [90018] = 18,  
    [90019] = 19,  
    [90020] = 20,  
    [90021] = 21,  
    [90022] = 22,  
    [90023] = 23,  
    [90024] = 24,  
    [100011] = 25,  
    [100012] = 26,  
    [100013] = 27,  
    [100014] = 28,  
    [100021] = 29,  
    [100022] = 30,  
    [100023] = 31,  
    [100024] = 32,  
    [100031] = 33,  
    [100032] = 34,  
    [100033] = 35,  
    [100034] = 36,  
    [100041] = 37,  
    [100042] = 38,  
    [100043] = 39,  
    [100044] = 40,  
    [100051] = 41,  
    [100052] = 42,  
    [100053] = 43,  
    [100054] = 44,  
    [150011] = 45,  
    [150012] = 46,  
    [150013] = 47,  
    [150014] = 48,  
    [200011] = 49,  
    [200012] = 50,  
    [200021] = 51,  
    [200022] = 52,
}

local __key_map = { 
    id = 1,
    type = 2,
    value = 3,
    group = 4,
    cost_type = 5,
    cost_value = 6,
    cost_num = 7,
}

local m = { 
    __index = function(t, k) 
        if k == "toObject" then
            return function()  
                local o = {}
                for key, v in pairs (__key_map) do 
                    o[key] = t._raw[v]
                end
                return o
            end 
        end
        
        assert(__key_map[k], "cannot find " .. k .. " in record_switch_info")

        return t._raw[__key_map[k]]
    end
}


function switch_info.getLength()
    return #switch_info._data
end



function switch_info.hasKey(k)
  if __key_map[k] == nil then
    return false
  else
    return true
  end
end


---
--@return @class record_switch_info
function switch_info.indexOf(index)
    if index == nil or not switch_info._data[index] then
        return nil
    end
    return setmetatable({_raw = switch_info._data[index]}, m)
end



---
--@return @class record_switch_info
function switch_info.get(id)
    
    return switch_info.indexOf(__index_id[ id ])
     
end



function switch_info.set(id, key, value)
    local record = switch_info.get(id)
    if record then
        local keyIndex = __key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end




function switch_info.get_index_data()
    return __index_id 
end

return  switch_info 