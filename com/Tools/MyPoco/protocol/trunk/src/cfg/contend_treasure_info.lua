---@classdef record_contend_treasure_info
local record_contend_treasure_info = {}


record_contend_treasure_info.id = 0--宝物碎片ID
record_contend_treasure_info.id_contend = 0--是否可以被抢夺
record_contend_treasure_info.position_x = 0--坐标点_x轴
record_contend_treasure_info.position_y = 0--坐标点_y轴
record_contend_treasure_info.player_pro = 0--抢夺玩家概率_基础概率
record_contend_treasure_info.parameter_fight = 0--抢夺玩家概率_战力参数
record_contend_treasure_info.robot_pro = 0--抢夺机器人概率
record_contend_treasure_info.robot_id_1 = 0--机器人ID
record_contend_treasure_info.robot_id_2 = 0--机器人ID
record_contend_treasure_info.robot_id_3 = 0--机器人ID
record_contend_treasure_info.robot_id_4 = 0--机器人ID
record_contend_treasure_info.robot_id_5 = 0--机器人ID
record_contend_treasure_info.robot_id_6 = 0--机器人ID
record_contend_treasure_info.robot_id_7 = 0--机器人ID
record_contend_treasure_info.robot_id_8 = 0--机器人ID
record_contend_treasure_info.robot_id_9 = 0--机器人ID
record_contend_treasure_info.robot_id_10 = 0--机器人ID

local contend_treasure_info = {
   _data = {   
    [1] = {11011,0,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [2] = {11012,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [3] = {11013,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [4] = {11021,0,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [5] = {11022,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [6] = {11023,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [7] = {11111,0,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [8] = {11112,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [9] = {11113,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [10] = {11114,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [11] = {11121,0,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [12] = {11122,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [13] = {11123,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [14] = {11124,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [15] = {11211,0,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [16] = {11212,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [17] = {11213,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [18] = {11214,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [19] = {11215,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [20] = {11321,0,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [21] = {11322,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [22] = {11323,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [23] = {11324,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [24] = {11325,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [25] = {12011,0,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [26] = {12012,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [27] = {12013,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [28] = {12021,0,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [29] = {12022,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [30] = {12023,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [31] = {12111,0,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [32] = {12112,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [33] = {12113,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [34] = {12114,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [35] = {12121,0,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [36] = {12122,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [37] = {12123,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [38] = {12124,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [39] = {12211,0,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [40] = {12212,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [41] = {12213,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [42] = {12214,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [43] = {12215,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [44] = {12321,0,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [45] = {12322,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [46] = {12323,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [47] = {12324,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [48] = {12325,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [49] = {13011,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [50] = {13012,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [51] = {13013,1,0,0,900,500,450,20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,},  
    [52] = {13021,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [53] = {13022,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [54] = {13023,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [55] = {13024,1,0,0,800,500,400,21001,21002,21003,21004,21005,21006,21007,21008,21009,21010,},  
    [56] = {13031,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [57] = {13032,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [58] = {13033,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [59] = {13034,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [60] = {13035,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [61] = {14011,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [62] = {14012,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [63] = {14013,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [64] = {14014,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [65] = {14015,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [66] = {14021,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [67] = {14022,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [68] = {14023,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [69] = {14024,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},  
    [70] = {14025,1,0,0,700,500,300,22001,22002,22003,22004,22005,22006,22007,22008,22009,22010,},
    }
}

local __index_id = {   
    [11011] = 1,  
    [11012] = 2,  
    [11013] = 3,  
    [11021] = 4,  
    [11022] = 5,  
    [11023] = 6,  
    [11111] = 7,  
    [11112] = 8,  
    [11113] = 9,  
    [11114] = 10,  
    [11121] = 11,  
    [11122] = 12,  
    [11123] = 13,  
    [11124] = 14,  
    [11211] = 15,  
    [11212] = 16,  
    [11213] = 17,  
    [11214] = 18,  
    [11215] = 19,  
    [11321] = 20,  
    [11322] = 21,  
    [11323] = 22,  
    [11324] = 23,  
    [11325] = 24,  
    [12011] = 25,  
    [12012] = 26,  
    [12013] = 27,  
    [12021] = 28,  
    [12022] = 29,  
    [12023] = 30,  
    [12111] = 31,  
    [12112] = 32,  
    [12113] = 33,  
    [12114] = 34,  
    [12121] = 35,  
    [12122] = 36,  
    [12123] = 37,  
    [12124] = 38,  
    [12211] = 39,  
    [12212] = 40,  
    [12213] = 41,  
    [12214] = 42,  
    [12215] = 43,  
    [12321] = 44,  
    [12322] = 45,  
    [12323] = 46,  
    [12324] = 47,  
    [12325] = 48,  
    [13011] = 49,  
    [13012] = 50,  
    [13013] = 51,  
    [13021] = 52,  
    [13022] = 53,  
    [13023] = 54,  
    [13024] = 55,  
    [13031] = 56,  
    [13032] = 57,  
    [13033] = 58,  
    [13034] = 59,  
    [13035] = 60,  
    [14011] = 61,  
    [14012] = 62,  
    [14013] = 63,  
    [14014] = 64,  
    [14015] = 65,  
    [14021] = 66,  
    [14022] = 67,  
    [14023] = 68,  
    [14024] = 69,  
    [14025] = 70,
}

local __key_map = { 
    id = 1,
    id_contend = 2,
    position_x = 3,
    position_y = 4,
    player_pro = 5,
    parameter_fight = 6,
    robot_pro = 7,
    robot_id_1 = 8,
    robot_id_2 = 9,
    robot_id_3 = 10,
    robot_id_4 = 11,
    robot_id_5 = 12,
    robot_id_6 = 13,
    robot_id_7 = 14,
    robot_id_8 = 15,
    robot_id_9 = 16,
    robot_id_10 = 17,
}

local m = { 
    __index = function(t, k) 
        if k == "toObject" then
            return function()  
                local o = {}
                for key, v in pairs (__key_map) do 
                    o[key] = t._raw[v]
                end
                return o
            end 
        end
        
        assert(__key_map[k], "cannot find " .. k .. " in record_contend_treasure_info")

        return t._raw[__key_map[k]]
    end
}


function contend_treasure_info.getLength()
    return #contend_treasure_info._data
end



function contend_treasure_info.hasKey(k)
  if __key_map[k] == nil then
    return false
  else
    return true
  end
end


---
--@return @class record_contend_treasure_info
function contend_treasure_info.indexOf(index)
    if index == nil or not contend_treasure_info._data[index] then
        return nil
    end
    return setmetatable({_raw = contend_treasure_info._data[index]}, m)
end



---
--@return @class record_contend_treasure_info
function contend_treasure_info.get(id)
    
    return contend_treasure_info.indexOf(__index_id[ id ])
     
end



function contend_treasure_info.set(id, key, value)
    local record = contend_treasure_info.get(id)
    if record then
        local keyIndex = __key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end




function contend_treasure_info.get_index_data()
    return __index_id 
end

return  contend_treasure_info 