---@classdef record_knight_book_award_info
local record_knight_book_award_info = {}


record_knight_book_award_info.id = 0--序号
record_knight_book_award_info.require_score = 0--所需积分
record_knight_book_award_info.affect_type_1 = 0--加成属性1
record_knight_book_award_info.affect_value_1 = 0--加成类型值1
record_knight_book_award_info.affect_type_2 = 0--加成属性2
record_knight_book_award_info.affect_value_2 = 0--加成类型值2

local knight_book_award_info = {
   _data = {   
    [1] = {1,50,2,200,207,2,},  
    [2] = {2,100,2,400,208,2,},  
    [3] = {3,150,3,300,207,5,},  
    [4] = {4,200,4,300,208,7,},  
    [5] = {5,300,1,18300,207,10,},  
    [6] = {6,400,2,1200,208,10,},  
    [7] = {7,500,3,700,207,10,},  
    [8] = {8,600,4,900,208,10,},  
    [9] = {9,700,1,45000,207,10,},  
    [10] = {10,800,2,2800,208,10,},  
    [11] = {11,950,3,1400,207,15,},  
    [12] = {12,1100,4,1400,208,15,},  
    [13] = {13,1250,1,56000,207,15,},  
    [14] = {14,1400,2,2900,208,15,},  
    [15] = {15,1550,3,1400,207,15,},  
    [16] = {16,1750,4,1500,208,20,},  
    [17] = {17,1950,1,60000,207,20,},  
    [18] = {18,2150,2,3100,208,20,},  
    [19] = {19,2350,3,1500,207,20,},  
    [20] = {20,2550,4,1500,208,20,},  
    [21] = {21,2800,1,62500,207,25,},  
    [22] = {22,3050,2,3200,208,25,},  
    [23] = {23,3300,3,1600,207,25,},  
    [24] = {24,3550,4,1600,208,25,},  
    [25] = {25,3800,1,62500,207,25,},  
    [26] = {26,4100,2,3400,208,30,},  
    [27] = {27,4400,3,1700,207,30,},  
    [28] = {28,4700,4,1700,208,30,},  
    [29] = {29,5000,1,65000,207,30,},  
    [30] = {30,5300,2,3400,208,30,},  
    [31] = {31,5650,3,1800,207,35,},  
    [32] = {32,6000,4,1800,208,35,},  
    [33] = {33,6350,1,70000,207,35,},  
    [34] = {34,6700,2,3600,208,35,},  
    [35] = {35,7050,3,1800,207,35,},  
    [36] = {36,7450,4,1900,208,40,},  
    [37] = {37,7850,1,73300,207,40,},  
    [38] = {38,8250,2,3800,208,40,},  
    [39] = {39,8650,3,1900,207,40,},  
    [40] = {40,9050,4,1900,208,40,},  
    [41] = {41,9500,1,75000,207,45,},  
    [42] = {42,9950,2,3900,208,45,},  
    [43] = {43,10400,3,1900,207,45,},  
    [44] = {44,10850,4,1900,208,45,},  
    [45] = {45,11300,1,75000,207,45,},  
    [46] = {46,11800,2,4300,208,50,},  
    [47] = {47,12300,3,2100,207,50,},  
    [48] = {48,12800,4,2100,208,50,},  
    [49] = {49,13300,1,83300,207,50,},  
    [50] = {50,13800,2,4300,208,50,},  
    [51] = {51,14350,3,2400,207,55,},  
    [52] = {52,14900,4,2400,208,55,},  
    [53] = {53,15450,1,91600,207,55,},  
    [54] = {54,16000,2,4800,208,55,},  
    [55] = {55,16550,3,2400,207,55,},  
    [56] = {56,17150,4,2600,208,60,},  
    [57] = {57,17750,1,100000,207,60,},  
    [58] = {58,18350,2,5200,208,60,},  
    [59] = {59,18950,3,2600,207,60,},  
    [60] = {60,19550,4,2600,208,60,},  
    [61] = {61,20200,1,108300,207,65,},  
    [62] = {62,20850,2,5700,208,65,},  
    [63] = {63,21500,3,2800,207,65,},  
    [64] = {64,22150,4,2800,208,65,},  
    [65] = {65,22800,1,108300,207,65,},  
    [66] = {66,23500,2,6100,208,70,},  
    [67] = {67,24200,3,3000,207,70,},  
    [68] = {68,24900,4,3000,208,70,},  
    [69] = {69,25600,1,116600,207,70,},  
    [70] = {70,26300,2,6100,208,70,},  
    [71] = {71,27050,3,3200,207,75,},  
    [72] = {72,27800,4,3200,208,75,},  
    [73] = {73,28550,1,125000,207,75,},  
    [74] = {74,29300,2,6500,208,75,},  
    [75] = {75,30050,3,3200,207,75,},  
    [76] = {76,30850,4,3500,208,80,},  
    [77] = {77,31650,1,133300,207,80,},  
    [78] = {78,32450,2,7000,208,80,},  
    [79] = {79,33250,3,3500,207,80,},  
    [80] = {80,34050,4,3500,208,80,},  
    [81] = {81,34900,1,141600,207,85,},  
    [82] = {82,35750,2,7400,208,85,},  
    [83] = {83,36600,3,3700,207,85,},  
    [84] = {84,37450,4,3700,208,85,},  
    [85] = {85,38300,1,141600,207,85,},  
    [86] = {86,39200,2,7800,208,90,},  
    [87] = {87,40100,3,3900,207,90,},  
    [88] = {88,41000,4,3900,208,90,},  
    [89] = {89,41900,1,150000,207,90,},  
    [90] = {90,42800,2,7800,208,90,},  
    [91] = {91,43750,3,4100,207,95,},  
    [92] = {92,44700,4,4100,208,95,},  
    [93] = {93,45650,1,158300,207,95,},  
    [94] = {94,46600,2,8300,208,95,},  
    [95] = {95,47550,3,4100,207,95,},  
    [96] = {96,48550,4,4300,208,100,},  
    [97] = {97,49550,1,166600,207,100,},  
    [98] = {98,50550,2,8700,208,100,},  
    [99] = {99,51550,3,4300,207,100,},  
    [100] = {100,52550,4,4300,208,100,},  
    [101] = {101,53650,1,183300,207,100,},  
    [102] = {102,54750,2,9600,208,100,},  
    [103] = {103,55850,3,4800,207,100,},  
    [104] = {104,56950,4,4800,208,100,},  
    [105] = {105,58050,1,183300,207,100,},  
    [106] = {106,59250,2,10500,208,100,},  
    [107] = {107,60450,3,5200,207,100,},  
    [108] = {108,61650,4,5200,208,100,},  
    [109] = {109,62850,1,200000,207,100,},  
    [110] = {110,64050,2,10500,208,100,},  
    [111] = {111,65350,3,5700,207,100,},  
    [112] = {112,66650,4,5700,208,100,},  
    [113] = {113,67950,1,216600,207,100,},  
    [114] = {114,69250,2,11400,208,100,},  
    [115] = {115,70550,3,5700,207,100,},  
    [116] = {116,71950,4,6100,208,100,},  
    [117] = {117,73350,1,233300,207,100,},  
    [118] = {118,74750,2,12200,208,100,},  
    [119] = {119,76150,3,6100,207,100,},  
    [120] = {120,77550,4,6100,208,100,},  
    [121] = {121,79050,1,250000,207,100,},  
    [122] = {122,80550,2,13100,208,100,},  
    [123] = {123,82050,3,6500,207,100,},  
    [124] = {124,83550,4,6500,208,100,},  
    [125] = {125,85050,1,250000,207,100,},  
    [126] = {126,86650,2,14000,208,100,},  
    [127] = {127,88250,3,7000,207,100,},  
    [128] = {128,89850,4,7000,208,100,},  
    [129] = {129,91450,1,266600,207,100,},  
    [130] = {130,93050,2,14000,208,100,},  
    [131] = {131,94750,3,7400,207,100,},  
    [132] = {132,96450,4,7400,208,100,},  
    [133] = {133,98150,1,283300,207,100,},  
    [134] = {134,99850,2,14900,208,100,},  
    [135] = {135,101550,3,7400,207,100,},
    }
}

local __index_id = {   
    [1] = 1,  
    [2] = 2,  
    [3] = 3,  
    [4] = 4,  
    [5] = 5,  
    [6] = 6,  
    [7] = 7,  
    [8] = 8,  
    [9] = 9,  
    [10] = 10,  
    [11] = 11,  
    [12] = 12,  
    [13] = 13,  
    [14] = 14,  
    [15] = 15,  
    [16] = 16,  
    [17] = 17,  
    [18] = 18,  
    [19] = 19,  
    [20] = 20,  
    [21] = 21,  
    [22] = 22,  
    [23] = 23,  
    [24] = 24,  
    [25] = 25,  
    [26] = 26,  
    [27] = 27,  
    [28] = 28,  
    [29] = 29,  
    [30] = 30,  
    [31] = 31,  
    [32] = 32,  
    [33] = 33,  
    [34] = 34,  
    [35] = 35,  
    [36] = 36,  
    [37] = 37,  
    [38] = 38,  
    [39] = 39,  
    [40] = 40,  
    [41] = 41,  
    [42] = 42,  
    [43] = 43,  
    [44] = 44,  
    [45] = 45,  
    [46] = 46,  
    [47] = 47,  
    [48] = 48,  
    [49] = 49,  
    [50] = 50,  
    [51] = 51,  
    [52] = 52,  
    [53] = 53,  
    [54] = 54,  
    [55] = 55,  
    [56] = 56,  
    [57] = 57,  
    [58] = 58,  
    [59] = 59,  
    [60] = 60,  
    [61] = 61,  
    [62] = 62,  
    [63] = 63,  
    [64] = 64,  
    [65] = 65,  
    [66] = 66,  
    [67] = 67,  
    [68] = 68,  
    [69] = 69,  
    [70] = 70,  
    [71] = 71,  
    [72] = 72,  
    [73] = 73,  
    [74] = 74,  
    [75] = 75,  
    [76] = 76,  
    [77] = 77,  
    [78] = 78,  
    [79] = 79,  
    [80] = 80,  
    [81] = 81,  
    [82] = 82,  
    [83] = 83,  
    [84] = 84,  
    [85] = 85,  
    [86] = 86,  
    [87] = 87,  
    [88] = 88,  
    [89] = 89,  
    [90] = 90,  
    [91] = 91,  
    [92] = 92,  
    [93] = 93,  
    [94] = 94,  
    [95] = 95,  
    [96] = 96,  
    [97] = 97,  
    [98] = 98,  
    [99] = 99,  
    [100] = 100,  
    [101] = 101,  
    [102] = 102,  
    [103] = 103,  
    [104] = 104,  
    [105] = 105,  
    [106] = 106,  
    [107] = 107,  
    [108] = 108,  
    [109] = 109,  
    [110] = 110,  
    [111] = 111,  
    [112] = 112,  
    [113] = 113,  
    [114] = 114,  
    [115] = 115,  
    [116] = 116,  
    [117] = 117,  
    [118] = 118,  
    [119] = 119,  
    [120] = 120,  
    [121] = 121,  
    [122] = 122,  
    [123] = 123,  
    [124] = 124,  
    [125] = 125,  
    [126] = 126,  
    [127] = 127,  
    [128] = 128,  
    [129] = 129,  
    [130] = 130,  
    [131] = 131,  
    [132] = 132,  
    [133] = 133,  
    [134] = 134,  
    [135] = 135,
}

local __key_map = { 
    id = 1,
    require_score = 2,
    affect_type_1 = 3,
    affect_value_1 = 4,
    affect_type_2 = 5,
    affect_value_2 = 6,
}

local m = { 
    __index = function(t, k) 
        if k == "toObject" then
            return function()  
                local o = {}
                for key, v in pairs (__key_map) do 
                    o[key] = t._raw[v]
                end
                return o
            end 
        end
        
        assert(__key_map[k], "cannot find " .. k .. " in record_knight_book_award_info")

        return t._raw[__key_map[k]]
    end
}


function knight_book_award_info.getLength()
    return #knight_book_award_info._data
end



function knight_book_award_info.hasKey(k)
  if __key_map[k] == nil then
    return false
  else
    return true
  end
end


---
--@return @class record_knight_book_award_info
function knight_book_award_info.indexOf(index)
    if index == nil or not knight_book_award_info._data[index] then
        return nil
    end
    return setmetatable({_raw = knight_book_award_info._data[index]}, m)
end



---
--@return @class record_knight_book_award_info
function knight_book_award_info.get(id)
    
    return knight_book_award_info.indexOf(__index_id[ id ])
     
end



function knight_book_award_info.set(id, key, value)
    local record = knight_book_award_info.get(id)
    if record then
        local keyIndex = __key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end




function knight_book_award_info.get_index_data()
    return __index_id 
end

return  knight_book_award_info 