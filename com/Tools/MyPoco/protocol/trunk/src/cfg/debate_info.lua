---@classdef record_debate_info
local record_debate_info = {}


record_debate_info.id = 0--ID
record_debate_info.turn = 0--轮次
record_debate_info.next_turn = 0--下一轮次
record_debate_info.enemy_min_1 = 0--对手1下限系数
record_debate_info.enemy_max_1 = 0--对手1上限系数
record_debate_info.expand_min_1 = 0--对手1下限拓展系数
record_debate_info.enemy_reward_1 = 0--对手1奖励
record_debate_info.enemy_min_2 = 0--对手2下限系数
record_debate_info.enemy_max_2 = 0--对手2上限系数
record_debate_info.expand_min_2 = 0--对手2下限拓展系数
record_debate_info.enemy_reward_2 = 0--对手2奖励
record_debate_info.enemy_min_3 = 0--对手3下限系数
record_debate_info.enemy_max_3 = 0--对手3上限系数
record_debate_info.expand_min_3 = 0--对手3下限拓展系数
record_debate_info.enemy_reward_3 = 0--对手3奖励
record_debate_info.rank_range_min = 0--排名段节点下限
record_debate_info.rank_range_max = 0--排名段节点上限

local debate_info = {
   _data = {   
    [1] = {1,1,2,700,850,60,4001001,750,900,60,4002001,800,950,60,4003001,1,10,},  
    [2] = {2,1,2,700,850,60,4001001,750,900,60,4002001,800,950,60,4003001,11,50,},  
    [3] = {3,1,2,700,850,60,4001001,750,900,60,4002001,800,950,60,4003001,51,100,},  
    [4] = {4,1,2,700,850,60,4001001,750,900,60,4002001,800,950,60,4003001,101,500,},  
    [5] = {5,1,2,700,850,60,4001001,750,900,60,4002001,800,950,60,4003001,0,0,},  
    [6] = {6,2,3,705,855,60,4001002,761,911,60,4002002,811,961,60,4003002,1,10,},  
    [7] = {7,2,3,705,855,60,4001002,761,911,60,4002002,811,961,60,4003002,11,50,},  
    [8] = {8,2,3,705,855,60,4001002,761,911,60,4002002,811,961,60,4003002,51,100,},  
    [9] = {9,2,3,705,855,60,4001002,761,911,60,4002002,811,961,60,4003002,101,500,},  
    [10] = {10,2,3,705,855,60,4001002,761,911,60,4002002,811,961,60,4003002,0,0,},  
    [11] = {11,3,4,711,861,60,4001003,772,922,60,4002003,822,972,60,4003003,1,10,},  
    [12] = {12,3,4,711,861,60,4001003,772,922,60,4002003,822,972,60,4003003,11,50,},  
    [13] = {13,3,4,711,861,60,4001003,772,922,60,4002003,822,972,60,4003003,51,100,},  
    [14] = {14,3,4,711,861,60,4001003,772,922,60,4002003,822,972,60,4003003,101,500,},  
    [15] = {15,3,4,711,861,60,4001003,772,922,60,4002003,822,972,60,4003003,0,0,},  
    [16] = {16,4,5,716,866,60,4001004,783,933,60,4002004,833,983,60,4003004,1,10,},  
    [17] = {17,4,5,716,866,60,4001004,783,933,60,4002004,833,983,60,4003004,11,50,},  
    [18] = {18,4,5,716,866,60,4001004,783,933,60,4002004,833,983,60,4003004,51,100,},  
    [19] = {19,4,5,716,866,60,4001004,783,933,60,4002004,833,983,60,4003004,101,500,},  
    [20] = {20,4,5,716,866,60,4001004,783,933,60,4002004,833,983,60,4003004,0,0,},  
    [21] = {21,5,6,722,872,60,4001005,794,944,60,4002005,844,994,60,4003005,1,10,},  
    [22] = {22,5,6,722,872,60,4001005,794,944,60,4002005,844,994,60,4003005,11,50,},  
    [23] = {23,5,6,722,872,60,4001005,794,944,60,4002005,844,994,60,4003005,51,100,},  
    [24] = {24,5,6,722,872,60,4001005,794,944,60,4002005,844,994,60,4003005,101,500,},  
    [25] = {25,5,6,722,872,60,4001005,794,944,60,4002005,844,994,60,4003005,0,0,},  
    [26] = {26,6,7,727,877,60,4001006,805,955,60,4002006,855,1005,60,4003006,1,10,},  
    [27] = {27,6,7,727,877,60,4001006,805,955,60,4002006,855,1005,60,4003006,11,50,},  
    [28] = {28,6,7,727,877,60,4001006,805,955,60,4002006,855,1005,60,4003006,51,100,},  
    [29] = {29,6,7,727,877,60,4001006,805,955,60,4002006,855,1005,60,4003006,101,500,},  
    [30] = {30,6,7,727,877,60,4001006,805,955,60,4002006,855,1005,60,4003006,0,0,},  
    [31] = {31,7,8,733,883,60,4001007,816,966,60,4002007,866,1016,60,4003007,1,10,},  
    [32] = {32,7,8,733,883,60,4001007,816,966,60,4002007,866,1016,60,4003007,11,50,},  
    [33] = {33,7,8,733,883,60,4001007,816,966,60,4002007,866,1016,60,4003007,51,100,},  
    [34] = {34,7,8,733,883,60,4001007,816,966,60,4002007,866,1016,60,4003007,101,500,},  
    [35] = {35,7,8,733,883,60,4001007,816,966,60,4002007,866,1016,60,4003007,0,0,},  
    [36] = {36,8,9,738,888,60,4001008,827,977,60,4002008,877,1027,60,4003008,1,10,},  
    [37] = {37,8,9,738,888,60,4001008,827,977,60,4002008,877,1027,60,4003008,11,50,},  
    [38] = {38,8,9,738,888,60,4001008,827,977,60,4002008,877,1027,60,4003008,51,100,},  
    [39] = {39,8,9,738,888,60,4001008,827,977,60,4002008,877,1027,60,4003008,101,500,},  
    [40] = {40,8,9,738,888,60,4001008,827,977,60,4002008,877,1027,60,4003008,0,0,},  
    [41] = {41,9,10,744,894,60,4001009,838,988,60,4002009,888,1038,60,4003009,1,10,},  
    [42] = {42,9,10,744,894,60,4001009,838,988,60,4002009,888,1038,60,4003009,11,50,},  
    [43] = {43,9,10,744,894,60,4001009,838,988,60,4002009,888,1038,60,4003009,51,100,},  
    [44] = {44,9,10,744,894,60,4001009,838,988,60,4002009,888,1038,60,4003009,101,500,},  
    [45] = {45,9,10,744,894,60,4001009,838,988,60,4002009,888,1038,60,4003009,0,0,},  
    [46] = {46,10,999,750,900,60,4001010,850,1000,60,4002010,900,1050,60,4003010,1,10,},  
    [47] = {47,10,999,750,900,60,4001010,850,1000,60,4002010,900,1050,60,4003010,11,50,},  
    [48] = {48,10,999,750,900,60,4001010,850,1000,60,4002010,900,1050,60,4003010,51,100,},  
    [49] = {49,10,999,750,900,60,4001010,850,1000,60,4002010,900,1050,60,4003010,101,500,},  
    [50] = {50,10,999,750,900,60,4001010,850,1000,60,4002010,900,1050,60,4003010,0,0,},  
    [51] = {51,999,999,750,900,60,4001009,850,1000,60,4002009,900,1050,60,4003009,1,10,},  
    [52] = {52,999,999,750,900,60,4001009,850,1000,60,4002009,900,1050,60,4003009,11,50,},  
    [53] = {53,999,999,750,900,60,4001009,850,1000,60,4002009,900,1050,60,4003009,51,100,},  
    [54] = {54,999,999,750,900,60,4001009,850,1000,60,4002009,900,1050,60,4003009,101,500,},  
    [55] = {55,999,999,750,900,60,4001009,850,1000,60,4002009,900,1050,60,4003009,0,0,},
    }
}

local __index_id_turn = {   
    ["1_1"] = 1,  
    ["2_1"] = 2,  
    ["3_1"] = 3,  
    ["4_1"] = 4,  
    ["5_1"] = 5,  
    ["6_2"] = 6,  
    ["7_2"] = 7,  
    ["8_2"] = 8,  
    ["9_2"] = 9,  
    ["10_2"] = 10,  
    ["11_3"] = 11,  
    ["12_3"] = 12,  
    ["13_3"] = 13,  
    ["14_3"] = 14,  
    ["15_3"] = 15,  
    ["16_4"] = 16,  
    ["17_4"] = 17,  
    ["18_4"] = 18,  
    ["19_4"] = 19,  
    ["20_4"] = 20,  
    ["21_5"] = 21,  
    ["22_5"] = 22,  
    ["23_5"] = 23,  
    ["24_5"] = 24,  
    ["25_5"] = 25,  
    ["26_6"] = 26,  
    ["27_6"] = 27,  
    ["28_6"] = 28,  
    ["29_6"] = 29,  
    ["30_6"] = 30,  
    ["31_7"] = 31,  
    ["32_7"] = 32,  
    ["33_7"] = 33,  
    ["34_7"] = 34,  
    ["35_7"] = 35,  
    ["36_8"] = 36,  
    ["37_8"] = 37,  
    ["38_8"] = 38,  
    ["39_8"] = 39,  
    ["40_8"] = 40,  
    ["41_9"] = 41,  
    ["42_9"] = 42,  
    ["43_9"] = 43,  
    ["44_9"] = 44,  
    ["45_9"] = 45,  
    ["46_10"] = 46,  
    ["47_10"] = 47,  
    ["48_10"] = 48,  
    ["49_10"] = 49,  
    ["50_10"] = 50,  
    ["51_999"] = 51,  
    ["52_999"] = 52,  
    ["53_999"] = 53,  
    ["54_999"] = 54,  
    ["55_999"] = 55,
}

local __key_map = { 
    id = 1,
    turn = 2,
    next_turn = 3,
    enemy_min_1 = 4,
    enemy_max_1 = 5,
    expand_min_1 = 6,
    enemy_reward_1 = 7,
    enemy_min_2 = 8,
    enemy_max_2 = 9,
    expand_min_2 = 10,
    enemy_reward_2 = 11,
    enemy_min_3 = 12,
    enemy_max_3 = 13,
    expand_min_3 = 14,
    enemy_reward_3 = 15,
    rank_range_min = 16,
    rank_range_max = 17,
}

local m = { 
    __index = function(t, k) 
        if k == "toObject" then
            return function()  
                local o = {}
                for key, v in pairs (__key_map) do 
                    o[key] = t._raw[v]
                end
                return o
            end 
        end
        
        assert(__key_map[k], "cannot find " .. k .. " in record_debate_info")

        return t._raw[__key_map[k]]
    end
}


function debate_info.getLength()
    return #debate_info._data
end



function debate_info.hasKey(k)
  if __key_map[k] == nil then
    return false
  else
    return true
  end
end


---
--@return @class record_debate_info
function debate_info.indexOf(index)
    if index == nil or not debate_info._data[index] then
        return nil
    end
    return setmetatable({_raw = debate_info._data[index]}, m)
end



---
--@return @class record_debate_info
function debate_info.get(id,turn)
    
    local k = id .. '_' .. turn
    return debate_info.indexOf(__index_id_turn[k])
     
end



function debate_info.set(id,turn, key, value)
    local record = debate_info.get(id,turn)
    if record then
        local keyIndex = __key_map[key]
        if keyIndex then
            record._raw[keyIndex] = value
        end
    end
end




function debate_info.get_index_data()
    return __index_id_turn 
end

return  debate_info 