syntax = "proto2";
package bs; 

message Attr {
    required uint32 type = 1;
    required uint64 value = 2;
}

message BattleCombo {
    repeated uint32 tokens = 1; // 合击技能列表
    repeated Attr attrs = 2; // 合击战斗属性
    repeated uint32 level = 3; // 技能等级
}

message BattleUnit {
    required uint32 id = 1; // 武将id,对应knight_info
    required uint32 pos = 2; // 武将位置,1-6
    repeated Attr attrs = 3; // 战斗属性
    repeated uint32 skills = 4; // 武将的被动技能
    optional uint32 star = 5; // 武将星级
    optional uint32 skill_level1 = 6;//普攻等级
    optional uint32 skill_level2 = 7;//技能等级
}

message BattleTeam {
    repeated BattleUnit units = 1; // 武将
    required BattleCombo combo = 2; // 合击数据
    optional uint64 fight_value = 3; // 总战力，pvp时需要
}

// 战斗数据，会有多波战斗
message BattleReport {
    required uint64 battle_id = 1; // 战斗唯一id
    required uint32 atk_type = 2; // 战斗类型 1 pve 2 pvp
    required bool is_auto = 3; // 是否自动战斗
    required uint32 random_seed = 4; // 随机数种子
    required BattleTeam own_teams = 5; // 己方阵容
    repeated BattleTeam enemy_teams = 6; // 敌方阵容,会有多个的情况
}

message PlayerCommand {
    required uint32 identity = 1;
    required uint32 id = 2;
    required uint32 attack_count = 3;
}

message UnitCheck {
    required uint32 identity = 1;
    required uint32 pos = 2;
    required uint64 hp = 3; // 只校验hp
}

// 战斗结果,用于校验
message BattleResult{
    required uint64 battle_id = 1; // 战斗唯一id
    required bool is_win = 2; //是否胜利
    repeated PlayerCommand command = 3; // 用户操作
    repeated UnitCheck units = 4; // 用于校验的额外数据
    required uint32 round = 5; //回合数
}

message CheckResult{
    required uint64 battle_id = 1; // 战斗唯一id
    required bool is_win = 2; //是否胜利
    required bool check = 3 ; //检查结果
    repeated UnitCheck units = 4; // 用于校验的额外数据
}

enum ID {
    MSG_S2C_ReplyBattleReport = 20000;
    MSG_C2S_CheckBattleResult = 20001;
    MSG_S2C_CheckBattleResult = 20002;
}

message S2C_ReplyBattleReport {
    required bytes report = 1;
}

message C2S_CheckBattleResult {
    required bytes result = 1;
}

message S2C_CheckBattleResult {
    required uint32 ret = 1;
}

