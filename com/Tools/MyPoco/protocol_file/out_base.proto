syntax = "proto2";
package out_base; 

message EmptyMessage {
}

message KV {
	required uint64 id = 1;//逻辑id
	required uint64 num = 2;//逻辑num
}

message Status {
	required uint32 id = 1;//逻辑状态Id
	required uint32 status = 2;//逻辑状态 起始跟上面区别就是uint32跟uint64 看情况使用 服务器内部package相关
}

message Task {
  required uint32 type = 1;
  required uint64 value = 2;
}

//等级礼包-限时商店结构
message LevelGiftShop {
  required uint32 shop_id = 1;//商店唯一id
  required uint32 config_id = 2; //配置表id
  required uint32 buy_status = 3; //1表示能购买，0表示不能购买
  required uint32 end = 4; //关闭时间
}

message StringMap {
  required string key = 1;
  required string value = 2;
}

message User {
	required uint64 id = 1;//玩家Id
	required string name = 2;//玩家姓名
	required uint32 level = 3;//玩家等级
	required int64 gold = 4;//玩家元宝 会有负数
	required uint32 vip_level = 5;//vip等级
  required uint64 fight_value = 6;//战力
	optional uint32 title_id = 7;//称号id
	repeated Status titles = 8;//所有称号
	optional uint32 base_id = 9;//主角baseid
  optional uint64 guild_id = 10; //军团id
	optional uint32 dress_id = 11; //时装
  optional uint32 frame_id = 12; //头像框
  optional uint32 guide_id = 13; //新手引导id
  optional uint32 join_guild_limit = 14; //加入军团限制时间
  optional string guild_name = 15; //军团名
  optional uint32 show_id = 16; //显示uid
  optional uint32 create_time = 17; //创角时间
  optional uint32 guild_send_count = 18;//军团送礼次数
  optional uint32 guild_receive_count = 19;//军团收礼次数
  optional uint32 storm_city_lord = 20; //官职
}

message Knight {
  required uint64 id = 1;//唯一id
  required uint32 base_id = 2;//表里id
  required uint32 exp = 3;//经验
  required uint32 level = 4;//等级
  required uint32 position = 5;//位置
	//repeated uint32 talent = 6;	// 天赋
  required uint64 init_hp = 7; //血量
  required uint32 attack = 8; //攻击
  required uint32 phy_defence = 9; //物防
  required uint32 mag_defence = 10; //法防
  required uint64 fight_value = 11; //战力
  repeated int32 star_train = 12;	// 将星属性：血、攻、物防、法防 待确认的血、攻、物防、法防
  optional uint32 advance_level = 13;	// 进阶等级
  repeated uint32 advance_equip_id = 14;	// 当前穿戴的进阶装备
  optional uint32 star_level = 15;	// 将星等级
  repeated KV other_attrs = 16; //二级属性
	required bool is_star_activited = 17;//当前等级将星是否激活
  optional uint32 skin = 18;	// 皮肤
  optional uint32 skin_ts = 19;	// 皮肤有效期
}

message Equipment {
  required uint64 id = 1;//唯一id
  required uint32 base_id = 2;//表里id
  required uint32 level = 3;//等级
  optional uint32 position = 4;//位置
  optional uint32 refining_level = 5;//精炼等级
  optional uint32 refining_exp = 6;//精炼经验
  optional uint32 glyph_level = 7; //雕纹等级
}

message Treasure {
  required uint64 id = 1;//唯一id
  required uint32 base_id = 2;//表里id
  required uint32 level = 3;//等级
  optional uint32 exp = 4;//经验
  optional uint32 position = 5;//位置
  optional uint32 refining_level = 6;//精炼等级
  optional uint32 glyph_level = 7; //雕纹等级
}

//红点规则
//红点逻辑主要由客户端计算
//客户端在进主界面时，除了关联性很强的info协议（列入主线副本），其他尽量把需要做红点的内容做到红点协议中
//服务器设计红点结构体时，如果碰到repeated对象需要传递，需要跟客户端对一下逻辑，这时候需要写一点小逻辑，减少发送内容
//eg.客户端进叛军界面时候会拉所有叛军信息，但是在主界面的红点只需要知道自己主线触发的叛军数量是多少
//这时候服务器就不要传所有叛军过去，而直接告诉客户端这个数量是多少把 repeated OBJ => uint32,至于具体逻辑客户端会在进界面时候拉完做逻辑的
message RedPoint {
	//各自模块用一个message结构体包含
	//例如 optional TestRedPoint test_rp = 0;
	optional DeadBattleHint dead_battle_hint = 1;//无双试练红点
	optional AchievementHint achievement_hint = 2;//成就
  optional RecruitHint recruit_hint = 3;	// 招将
  optional DungeonHint dungeon_hint = 4; // 主线副本
  optional CityHint city_hint = 5; // 封地巡逻
  optional BiographyHint biography_hint = 6; //名将传
  optional GuildHint guild_hint = 7; //军团
  repeated ModuleTaskHint module_task_hints = 8; //模块任务
  optional ShopHint shop_hint = 9;	// 商店红点
  optional ScrollHint scroll_hint = 10; //三国志
  optional FightingHint fighting_hint = 11; //战力竞赛
	optional RebelHint rebel_hint = 12;//叛军相关红点
	optional CommonHint common_hint = 13;//----------------------------common value红点
  repeated RecruitKnight recruit_knight_hint = 14; //限时神将红点
  optional StormHint storm_hint = 15; //攻城略地红点
  optional OnlineGiftHint online_gift_hint = 16; // 在线礼包小红点
}

message OnlineGiftHint {
  optional uint32 online_time = 1; // 在线时间
  repeated out_base.KV reward_record = 2; // 领奖记录
}

message CommonHint {
	optional uint32 red_treasure_compose = 1;//合成红色宝物次数
  optional uint32 arena_max_rank = 2;//竞技场最高排名
}

message StormHint {
  repeated uint32 finish_storm_ids = 1;	// 已通关关隘ID(已领取通关奖励)
  optional uint32 total_progress = 2;	// 总进度
  repeated uint32 clear_storm_ids = 3;	// 今日已扫荡关隘ID
  repeated uint32 storm_ids = 4; // 关隘id列表
  repeated uint32 max_order = 5; // 关隘id列表对应的最大配置表order数
}

message RebelHint {
  optional uint32 level = 1;	// 今日0点前最高击杀叛军等级
	optional uint32 self_rebel = 2;//自己主线触发的叛军数量
  repeated uint64 award_ids = 3;	// 今日已领取的奖励配置id
  optional uint64 total_damage = 4;	// 今日累计伤害
  optional uint64 max_damage = 5;	// 今日最高伤害
}

message DeadBattleHint {
	optional uint32 fail = 1;//本次已经失败次数
	optional uint32 shop_size = 2;//商店数量
	optional bool is_award = 3;//本层宝箱是否领取
	optional uint32 record_star = 4;//最高星数
}

message AchievementHint {
	repeated out_base.Status status = 1;//成就状态
	repeated uint64 finish = 2;//成就完成奖励
	repeated uint64 reward = 3;//成绩点奖励
}

message RecruitHint {
  repeated uint32 free_count = 1;  // 今日已使用免费次数(依次为普通、高级招募)
  repeated uint32 free_time = 2; // 上次免费抽取的时间戳(依次为普通、高级招募)
  repeated uint32 total_count = 3;  // 总招募次数(依次为普通、高级招募)
}

message DungeonHint {
  repeated ChapterHint chapters = 1;//主线副本
}

message ChapterHint {
  optional uint32 id = 1; //章节id
  optional uint32 star = 2; //章节星数
  repeated uint32 star_chest = 3; //已领取星数宝箱
  repeated uint32 stage_finish = 4; //已完成关卡
  repeated uint32 stage_chest = 5; //已领取关卡宝箱
}

message CityHint {
  optional bool can_patrol = 1; //是否有城池可巡逻
  optional bool patrol_award = 2; //是否有巡逻奖励未领取
  repeated out_base.TaskInfo common_tasks = 3; //成就信息
  repeated uint64 task_awarded = 4; //已领取成就id
}

message BiographyHint {
  repeated out_base.BioMission missions = 1; //关卡信息
  repeated out_base.BioCampaign campaigns = 2; //完成战役
  repeated out_base.CampaignInvitation invitations = 4;//所有邀请函
  repeated uint64 mission_chain_awarded = 5; //任务链奖励
  repeated uint64 mission_progress_awarded = 6;//支线任务进度奖励
	repeated out_base.KV mission_preset_condition = 7;//判断战役信息的前置条件，id为表id，num为对应要求的状态
}

message GuildHint {
  optional uint64 guild_id = 1; //军团id
  optional uint32 guild_level = 2; //军团等级
  optional uint32 join_guild_limit = 3; //加入军团限制时间
  optional uint32 apply_num = 4; //未处理申请数量
  repeated uint32 message_time = 5; //所有留言时间 客户端需记录上一次进入留言板的时间
  repeated uint32 worship_record = 6; //今日祭天记录
  optional uint32 worship_progress = 7; //祭天进度
  repeated uint32 worship_awarded = 8; //已领取进度奖励
  optional GuildDungeonHint dungeon_hint = 9; //军团副本
	optional bool has_red_packet = 10;//可领取的红包
  optional uint32 member_position = 11; //成员职位
	optional uint32 gold_redpacket_left_time = 12;//每日元包红包可领取次数//这个逻辑不用了
  optional GuildWorship worship = 13; //祭天玩家信息
  repeated out_base.Task missions = 14; //祭天任务进度
  optional uint32 zero_hour_level = 15; //军团0点等级
  optional GuildStatueHint statue = 16; //军团神像红点
}

message GuildDungeonHint {
  optional uint32 current_chapter = 1; //当前章节
  optional uint32 rollback_chapter = 2; //当前回滚章节
  repeated uint64 chapter_awarded = 3; //已领取奖励章节
  repeated uint32 stage_finished = 4; //通关关卡
  repeated uint32 stage_awarded = 5; //已领取奖励关卡
  repeated uint32 mvp_award = 7; //可领取mvp奖励的关卡
  repeated out_base.TaskInfo daily_tasks = 8; //每日任务状态
  repeated uint64 daily_task_awarded = 9; //已领取奖励的任务
  repeated out_base.TaskInfo weekly_tasks = 10; //每周任务状态
  repeated uint64 weekly_task_awarded = 11; //已领取奖励的任务
  repeated uint32 skill_id = 12; //副本技能id
}

message ModuleTaskHint { 
  required uint32 module_id = 1; //模块id，关联action_task_info.xml
  repeated out_base.TaskInfo common_tasks = 2; //永久任务
  repeated out_base.TaskInfo daily_tasks = 3; //每日任务
  repeated out_base.TaskInfo weekly_tasks = 4; //每周任务
  repeated uint64 common_awards = 5; //已领取永久任务奖励
  repeated uint64 daily_awards = 6; //已领取每日任务奖励
  repeated uint64 weekly_awards = 7; //已领取每周任务奖励
}

message ShopHint {
	repeated out_base.KV infos = 1;//商店
}

message ScrollHint {
	repeated uint32 main_ids = 1;//主线节点激活情况
	repeated uint32 hero_ids = 2;//名将节点激活情况
}

message FightingHint {
  optional uint64 fight_value = 1;	// 历史最高战力
  repeated uint32 ids = 2;	// 已领取过的战力奖励id
}

message OpKnight {
	repeated Knight insert = 1;
	repeated Knight update = 2;
	repeated uint64 del = 3;
}

message OpEquipment {
	repeated Equipment insert = 1;
	repeated Equipment update = 2;
	repeated uint64 del = 3;
}

message OpTreasure {
	repeated Treasure insert = 1;
	repeated Treasure update = 2;
	repeated uint64 del = 3;
}

message OpUniteToken {
  repeated UniteToken insert = 1;
  repeated UniteToken update = 2;
  repeated uint64 del = 3;
}

message OpKV {
	repeated KV insert = 1;
	repeated KV update = 2;
	repeated uint64 del = 3;
}

message OpResource {
	repeated Resource insert = 1;
	repeated Resource update = 2;
	repeated uint64 del = 3;
}

message OpDress {
  repeated Dress insert = 1;
  repeated Dress update = 2;
  repeated uint32 del = 3;
}

message OpSkin {
  repeated Skin insert = 1;
  repeated Skin update = 2;
  repeated uint32 del = 3;
}

message OpRecruitKnight {
  repeated RecruitKnight insert = 1;
  repeated RecruitKnight update = 2;
  repeated uint32 del = 3;
}

message UniteToken {
  required uint32 id = 1;//todo
  required uint32 base_id = 2;
  required uint32 level = 3;
  required bool awaken = 4;
  required uint32 position = 5;
  optional uint32 star = 6;
}

message Award {
  required uint32 type = 1;
  required uint64 value = 2;
  required uint64 size = 3;
}

message Awards {
  repeated Award detail = 1;
}

message Formation {
	repeated uint32 position = 1;//侠客出战位置
	repeated uint64 knight_id = 2;//上阵侠客
	repeated uint32 unite_token_id = 3;//上阵兵符
	repeated uint64 equipment_id = 4;//上阵装备
	repeated uint64 treasure_id = 5;//上阵宝物
}

message UserSnapshot {
	required uint64 id = 1;//唯一id
	optional uint32 sid = 2;//服务器id
	optional string name = 3;//名字
	optional uint32 level = 4;//等级
	optional uint32 vip_level = 5;//vip
	optional uint32 base_id = 6;//主角baseid
	optional uint64 fight_value = 7;//战力
  optional uint32 robot_type = 8; //机器人类型 0:表示正常玩家，999:表示竞技场机器人,其他表示robot_info.xml中的机器人
  optional uint32 offline_time = 9;	// 离线时间戳
	optional uint32 dress_id = 10;//时装id
	optional uint32 title_id = 11;//称号id
	optional uint32 title_time = 12;//称号时间
  optional uint32 join_guild_limit = 13; //加入军团限制时间
  optional uint32 trouble_city_num = 14; //发生动乱城池数量
  optional string guild_name = 15; //军团名
  optional uint32 frame_id = 16; //头像框
  optional uint32 hof_fv_like = 17; //名人堂战力点赞
  optional uint32 hof_lv_like = 18; //名人堂等级点赞
  optional uint32 join_guild_time = 19; //加入军团时间
  optional uint64 guild_id = 20; //军团id
  optional uint32 storm_city_lord = 21; //攻城掠地官职
  optional string server_name = 22; //服务器名
}

message GuildSnapshot {
	required uint64 id = 1; //军团id
	required uint32 sid = 2; //服务id
	optional string name = 3; //名字
	optional uint32 level = 4; //等级
  optional uint32 exp = 5; //经验
  optional uint32 member_num = 6; //成员数量
  optional uint32 icon = 7; //头像
  optional uint32 frame = 8; //边框
  optional bool confirm = 9; //是否需要审核
  optional uint32 apply_level = 10; //申请限制等级
  optional string announcement = 11; //公告
  optional string declaration = 12; //宣言
  optional uint64 leader_id = 13; //军团长id
  optional uint32 leader_base_id = 14; //军团长baseId
  optional string leader_name = 15; //军团长名字
  optional uint64 fight_value = 16; //军团战力
  optional uint32 current_chapter = 17; //军团副本进度
  optional uint32 leader_dress_id = 18; //军团长时装
  optional uint32 statue_stage = 19; //军团神像品质
}

message Chapter {
  required uint32 id = 1;//todo
  repeated uint32 star_chest = 2;
  repeated uint32 stage_chest = 3;
}

message Stage {
  required uint32 id = 1;//todo
  required uint32 star = 2;
  required uint32 reset_count = 3;
  required uint32 challenge_count = 4;      
  optional string min_round_name = 5; //最快通关玩家
  optional string min_fight_value_name = 6; //最低战力通关
}

message FinishResult {
  required uint32 index = 1;//todo
  required uint32 role_exp = 2;
  required uint32 silver = 3;
  repeated Award awards = 4;
  repeated Award drops = 5;
}

message RankUnit {
  required uint32 rank = 1;//todo
  required uint64 score = 2;
  optional UserSnapshot user = 3;
  optional GuildSnapshot guild = 4;
}

message ArenaUnit {
  required uint32 rank = 1;//todo
  required UserSnapshot user = 2;
  optional bool can_challenge = 3;
  optional uint32 robot_id = 4;
}

message DropAward {
  required uint32 drop_id = 1;
  repeated Award awards = 2;
}

message ArenaAward {
  repeated Award awards = 1;
  optional uint32 drop_id = 2;
  repeated Award drops = 3;
}

message ContendTreasureAward {
  repeated Award awards = 1;//todo
  optional uint32 drop_id = 2;
  repeated Award drops = 3;
}

message TaskInfo {
  required uint32 type = 1;
  required uint64 value = 2;
}

message Mail {
  required uint32 id = 1;
  required uint32 base_id = 2;	// 配置表id
  optional uint64 sender_id = 3;	// 发送者
  optional uint32 time = 4; // 时间戳
  repeated string keys = 5;	// 模板字段名
  repeated string values = 6;	// 模板字段值
  repeated Award awards = 7;	// 奖励
  optional bool got_award = 8;	// 是否已经领取奖励
  optional uint32 reason = 9; // 发奖原因
  optional string name = 10;	// 发送者名字
}

message CommonPlayNum {
	required uint32 id = 1;
	optional uint64 left_count = 2;//剩余次数
	optional uint64 buy_count = 3;//已经购买的次数
}

//状态说明
//当floor_star都>0时 floor_buff为0代表宝箱还没有领取 
//当领取宝箱奖励之后floor_star全部为0 并且生成floor_buff
//当floor_buff只有在floor_star都为0的时候才可能有值
//以上逻辑作废 宝箱逻辑为is_award
message DeadBattle {
	optional uint32 floor = 1;//当前floorid 0开始
	optional uint32 total_star = 2;//本次总星数
	optional uint32 buff_star = 3;//购买buff剩余星数
	optional uint32 record_star = 4;//历史最高星数
	repeated uint32 floor_buff = 5;//本层可以选择的buff 3个
	repeated uint32 floor_star = 6;//本层的星数
	repeated uint32 buffs = 7;//所有选择的buff
	optional uint32 fail = 8;//失败次数
	optional uint32 week_star = 9;//本周星数
	repeated uint32 history_id = 10;//所有关卡id
	repeated uint32 history_star = 11;//所有关卡历史最高星
	optional bool is_award = 12;//本层是否领奖
}

message DeadBattleShop {
	required uint32 id = 1;//id
	repeated Status items = 2;//商城道具
	required uint32 due_time = 3;//过期时间
}

message BioMission {
  required uint32 id = 1;//关卡id
  optional bool finish = 2;//是否完成
  optional uint32 attack_count = 3;//已挑战次数
  optional uint32 reset_count = 4;//已重置次数
}

message BioMissionAward {
  required uint32 index = 1;      //扫荡时第几次
  optional uint32 role_exp = 2;   //主角经验
  optional uint32 knight_exp = 3; //武将经验
  optional uint32 silver = 4;     //银两
  repeated Award first_drops = 5; //首次掉落
  repeated Award finish_drops = 6;//通关掉落
	repeated Award rare_drops = 7; //金色掉落，目前只有天降福袋用到
}

message BioCampaign {
  required uint32 id = 1; //战役id
  optional bool finish = 2; //是否通关
  optional bool award = 3; //首次通关奖励
}

message BioBoss {
	required uint32 base_id = 1;//bossid
	required uint32 chapter_id = 2;//章节id
	required uint64 hp = 3;//已扣除血量
	required uint32 position = 4;//章节中的具体位置
  optional bool is_first = 5;//是否首次挑战触发
}

message CampaignTeam {
  required uint64 id = 1;          //队伍id
  required uint32 campaign_id = 2; //战役id
  optional bool only_invited = 3; //只接受被邀请的
  repeated CampaignMember members = 4; //队员
  optional uint32 online_addition = 5; //在线加成
  optional uint32 friend_addition = 6; //好友加成
  optional uint32 guild_addition = 7; //军团加成
  optional bool lock = 8; //是否开放
}

message CampaignMember {
  required UserSnapshot user = 1; //玩家数据
  optional bool captain = 2; //是否是队长
  optional bool prepare = 3; //是否已准备
  optional uint32 position = 4; //位置从1开始
  optional bool robot = 5; //是否是机器人
}

message CampaignInvitation {
  required uint64 team_id = 1; //队伍id
  required uint32 campaign_id = 2; //战役id
  required uint32 invite_time = 3; //邀请时间
  required out_base.UserSnapshot inviter = 4; //邀请人
}

message CardAward {
  required Award award = 1; //翻牌获得奖励
  repeated Award shows = 2; //显示其他牌奖励 
}

message CampaignAward {
  required uint32 silver = 1; //银两
  required uint32 material = 2; //兵符精华
  repeated Award drops = 3; //普通掉落
  optional CardAward award_card = 4; //翻牌奖励
  repeated TeammateCardAward mate_cards = 6; //队友翻牌奖励
}

message TeammateCardAward {
  required uint64 user_id = 1; //队友id
  optional uint32 base_id = 2; //队友品质
  optional string name = 3; //队友名字
  optional Award award = 4; //翻牌奖励
}

message City {
  required uint32 id = 1;//todo  
  required uint32 level = 2;
  required uint32 model_id = 3;
  optional uint32 knight_id = 4; //knight_info中的id
  optional uint32 start_time = 5;
  optional CityRecommendEvent recommend_event = 6;
  repeated CityResourceEvent resource_event = 7;
  repeated CityTroubleEvent trouble_event = 8;
} 

message CityResourceEvent {
  required uint32 time = 1;//todo
  required uint32 type = 2;
  repeated Award awards = 3;
}

message CityRecommendEvent {
  required uint32 time = 1;//todo
  required uint32 multiple = 2;
  repeated Award awards = 3;
}

message CityTroubleEvent {
  required uint32 time = 1; //todo
  required uint32 trouble_id = 2;
  optional string friend_name = 3;
  optional uint32 friend_time = 4;
  repeated Award awards = 5;
}

message CityRecommendKnight {
  required uint32 city_id = 1;//todo
  required uint32 city_level = 2;
  repeated uint32 knight_id = 3; //city_knight_info中的id
}

message Friend {
  optional UserSnapshot user = 1;
  optional uint32 gift_id = 2;	// 可领取的礼物id
  optional uint32 intimate = 3;	// 亲密度
  repeated uint32 task_id = 4;	// 任务id
  repeated uint32 task_count = 5;	// 今日任务已完成次数(与task_id对应)
}

message BattleUser {
  optional UserSnapshot user = 1;//todo
  //required uint64 user_id = 1;
  //required uint32 server_id = 2;
  //required string name = 3;
  //required uint32 level = 4;
  //required uint64 fight_value = 5;
  required Formation formation = 6;
  repeated Knight knights = 7;
  repeated UniteToken unite_tokens = 8;
  repeated Equipment equipments = 9;
	repeated Treasure treasures = 10;
	//optional uint32 dress_id = 9;
}

message Handbook {
	required uint32 id = 1;//图鉴id
	required uint32 level = 2;//图鉴等级
}

message Dress {
	required uint32 id = 1;//advance code
	optional uint32 level = 2;//enhance等级
}


message Skin {
	required uint32 id = 1;//advance code
	optional uint32 ts = 2;//截止时间
}

message Rebel {
  required uint32 id = 1;	// id
  required uint32 base_id = 2;	// 配置id
  required uint32 level = 3;	// 等级
  required uint64 hp = 4;	// 已扣除hp
  required uint32 ts = 5;	// 过期时间
  required bool share = 6;	// 是否已分享
  required uint64 uid = 7;	// 玩家id
}

message GuildMember {
  required UserSnapshot user = 1;//快照
  required uint32 position = 2;//职位
  required uint32 daily_contribute = 3;//每日贡献
  required uint32 total_contribute = 4;//所有贡献
  optional uint32 guild_send_count = 5;//军团送礼次数
  optional uint32 guild_receive_count = 6;//军团收礼次数
}

message GuildMessage {
  required uint32 id = 1;//todo
  required bool top = 2;
  required string message = 3;
  required uint32 create_time = 4;
  required uint64 member_id = 5;
  required uint32 member_base_id = 6;
  required string member_name = 7;
  required uint32 member_position = 8;
}

message GuildHistory {
  required uint32 base_id = 1;//todo
  required uint32 time = 2;
  repeated string key = 3;
  repeated string value = 4;
}

message GuildRedPacket {
	required uint64 id = 1;//唯一ID
	required uint32 base_id = 2;//表ID
	required uint32 due_time = 3;
	optional uint64 from_id = 4;//玩家红包就是userid
	optional bool picked = 5;//玩家是否已获取
	optional uint32 pick_size = 6;//获取数量
	optional uint32 point = 7;//如果picked为true这两个值就是领取的值
	optional uint32 luck = 8;//幸运值
	optional uint32 from_base_id = 9;//玩家baseid
	optional string from_name = 10;//玩家姓名
}

message GuildDungeonStage {
  required uint32 id = 1;
  optional bool  mvp_awarded = 2; //mvp奖励是否已领取
  repeated uint64 monster_hp = 3; //怪物剩余血量
  repeated uint32 acquired_pos = 4; //已领取奖励位置
  repeated uint64 acquired_uid = 5; //已领取奖励的玩家
  repeated uint32 acquired_box = 6; //已领取的奖励id
  repeated uint64 member_id = 7; //成员id
  repeated uint64 member_damage = 8; //成员伤害
}

message Goods {
  required uint32 id = 1;	// 配置表id
  optional uint32 buy_count = 2;	// 已购买次数
}

message Shop {
  required uint32 id = 1;	// 配置表id
  optional uint32 goods_flush_time = 2;	// 货物下次刷新时间
  optional uint32 score_flush_time = 3;	// 积分进度下次刷新时间
  optional uint32 score = 4;	// 进度积分
  repeated Goods special_goods = 5;	// 特殊货架物品
  repeated Goods normal_goods = 6;	// 普通货架物品
  // 玩家相关数据:
  optional uint32 flush_total_max = 7;	// 总手动刷新上限
  optional uint32 flush_total_count = 8;	// 总已手动刷新次数
  optional uint32 flush_buy_count = 9;	// 已购买手动刷新次数
}

message Resource {
  required uint64 id = 1;
  required uint64 num = 2;
  optional uint32 time = 3;
}

message UserConfig {
	repeated uint64 chat = 1;//聊天配置
}

message Announce {
	required uint64 id = 1;//后台配置id
	required uint32 begin = 2;//开始时间
	required uint32 end = 3;//结束时间
	required uint32 frequent = 4;//频率(秒)
	required string announcement = 5;//内容
}

message ArenaRecord {
  required uint64 battle_id = 1;//todo
  required bool is_win = 2;
  required uint32 atker_rank = 3;
  required uint32 defer_rank = 4;
  required UserSnapshot attacker = 5;
  required UserSnapshot defender = 6;
  optional uint32 atker_cur_rank = 7;
  optional uint32 defer_cur_rank = 8;
}

message MonthCard {
  required uint32 mc_id = 1;// id
  required uint32 last_use_time = 2;//使用月卡时间
  required bool mc_use = 3;//今天月卡是否可以使用
  required uint32 end_time = 4;//月卡到期时间
}

//首充活动
message FirstRecharge {
  required uint32 id = 1;           //首充阶段
  required uint32 progress = 2;     //当前阶段进度
  repeated uint32 ids = 3;          //已领取奖励的阶段id
}

//基金
message FundRecharge {
  required uint32 id = 1;           //充值表配置id
  repeated uint32 finish_ids = 2;   //已完成的基金ID
  repeated uint32 ids = 3;          //已领奖的基金ID
  required uint32 active_num = 4;   //全服基金购买的人数
  required bool is_buy = 5;         //是否购买
}

message DayRecharge {
  required uint32 activity_id = 1;  //活动id
  required uint32 id = 2;           //充值阶段对应id(type类型为1的id)
  required uint32 progress = 3;     //每日累计充值进度
  repeated uint32 finish_ids = 4;   //已完成的id(type类型为1的id)
  repeated uint32 ids = 5;          //已领取的id(所有领过奖的id)
  required bool is_finish = 6;      //今天是否充值完成
}

//新服累计充值
message TotalRecharge {
  repeated uint32 ids = 1;          //已领完奖ids
}

message OpMonthCard {
  repeated MonthCard insert = 1;
  repeated MonthCard update = 2;
  repeated uint64 del = 3;
}

message OpFirstRecharge {
  repeated FirstRecharge insert = 1;
  repeated FirstRecharge update = 2;
  repeated uint64 del = 3;
}

message OpFundRecharge {
  repeated FundRecharge insert = 1;
  repeated FundRecharge update = 2;
  repeated uint64 del = 3;
}

message OpDayRecharge {
  repeated DayRecharge insert = 1;
  repeated DayRecharge update = 2;
  repeated uint64 del = 3;
}

message OpSubRecharge {
  repeated MonthCard insert = 1;
  repeated MonthCard update = 2;
  repeated uint64 del = 3;
}

message OpTotalRecharge {
  repeated TotalRecharge insert = 1;
}

message OpOpenPurchase {
  repeated OpenPurchase insert = 1;
  repeated OpenPurchase update = 2;
  repeated uint64 del = 3;
}

message OpDayBox {
  repeated DayBox insert = 1;
  repeated DayBox update = 2;
  repeated uint64 del = 3;  
}

message CustomActivityHideInfo {
  required uint32 id = 1; //活动id
  required uint32 server_limit = 2;
  required uint32 time_type = 3; //时间类型(1:unix时间2:开服第几天)
  required uint32 preview_time = 4; //预览时间
  required uint32 expire_time = 5; //结束时间
  required uint32 min_level = 6;
  required uint32 max_level = 7;
}

message CustomActivityInfo {
  required uint32 id = 1;
  required uint32 type = 2; //1:翻倍类2:条件类3:兑换类4:充值类
  required string title = 3; //活动标题
  required uint32 icon_type = 4;
  required uint32 icon_value = 5;
  required string description = 6;
  required string resource = 7;
  required uint32 server_limit = 8;
  required uint32 time_type = 9; //时间类型(1:自然时间 2:服务器时间(开服第x天))
  required uint32 preview_time = 10; //预览开始时间
  required uint32 start_time = 11; //活动开始时间
  required uint32 finish_time = 12; //活动结束时间
  required uint32 expire_time = 13; //活动过期时间
  required uint32 rotate_time = 14; //轮转时间(每隔多久开一次)
  required uint32 min_level = 15;
  required uint32 max_level = 16;
  required uint32 icon_kind = 17; //ICON类型(1:常规icon2:活动icon)
  repeated CustomActivityDetailInfo details = 18;
  repeated CustomActivityCollectInfo collects = 19;
  repeated CustomActivityRechargeInfo recharges = 20;
  repeated CustomActivityOpenPurchaseInfo open_purchase = 21;
  optional string show_resource = 22;
  optional string name = 23;    //活动名称
}

message CustomActivityDetailInfo {
  required uint32 id = 1;
  required uint32 activity_id = 2;
  required uint64 param1 = 3; //翻倍模块、任务类型、兑换折扣显示、 充值类任务类型(action) 新充值类任务类型(1累充2单充)
  required uint64 param2 = 4; //翻倍倍数、任务目标、兑换限制类型、 充值类任务目标         累计充值金额或者单充额度
  required uint64 param3 = 5; //无、      无、      兑换限制数量、 无                     可完成次数
  required uint32 cost_type1 = 6;
  required uint64 cost_value1 = 7;
  required uint64 cost_size1 = 8;
  required uint32 cost_type2 = 9;
  required uint64 cost_value2 = 10;
  required uint64 cost_size2 = 11;
  required uint32 cost_type3 = 12;
  required uint64 cost_value3 = 13;
  required uint64 cost_size3 = 14;
  required uint32 cost_type4 = 15;
  required uint64 cost_value4 = 16;
  required uint64 cost_size4 = 17;
  required uint32 drop_type = 18; //掉落类型:1 全部掉 2 n选1
  required uint32 award_type1 = 19;
  required uint64 award_value1 = 20;
  required uint64 award_size1 = 21;
  required uint32 award_type2 = 22;
  required uint64 award_value2 = 23;
  required uint64 award_size2 = 24;
  required uint32 award_type3 = 25;
  required uint64 award_value3 = 26;
  required uint64 award_size3 = 27;
  required uint32 award_type4 = 28;
  required uint64 award_value4 = 29;
  required uint64 award_size4 = 30;
}

message CustomActivityCollectInfo {
  required uint32 id = 1;
  required uint32 activity_id = 2;
  required uint32 type1 = 3;
  required uint32 value1 = 4;
  required uint32 type2 = 5;
  required uint32 value2 = 6;
  required uint32 type3 = 7;
  required uint32 value3 = 8;
  required uint32 type4 = 9;
  required uint32 value4 = 10;
  required uint32 award_type1 = 11;
  required uint64 award_value1 = 12;
  required uint64 award_size1 = 13;
  required uint32 award_type2 = 14;
  required uint64 award_value2 = 15;
  required uint64 award_size2 = 16;
  required uint32 award_type3 = 17;
  required uint64 award_value3 = 18;
  required uint64 award_size3 = 19;
  required uint32 award_type4 = 20;
  required uint64 award_value4 = 21;
  required uint64 award_size4 = 22;
  required uint32 drop_type = 23; //掉落类型:1 全部掉 2 n选1
}

message CustomActivityRechargeInfo {
  required uint32 id = 1;
  required uint32 activity_id = 2;
  required uint32 type = 3; //任务类型1:每日充值2:充值大礼3:每日礼包
  required uint32 value = 4; //每日充值=>充值金额 充值大礼=>0 每日礼包=>第几天 
  required uint32 NextId = 5; //下一个任务
  required uint32 price = 6; //奖励价值
  required uint32 is_open = 7; //是否开启任务 1:开启 2:关闭
  required uint32 drop_type = 8; //掉落类型:1 全部掉 2 n选1
  required uint32 award_type1 = 9;
  required uint64 award_value1 = 10;
  required uint64 award_size1 = 11;
  required uint32 award_type2 = 12;
  required uint64 award_value2 = 13;
  required uint64 award_size2 = 14;
  required uint32 award_type3 = 15;
  required uint64 award_value3 = 16;
  required uint64 award_size3 = 17;
  required uint32 award_type4 = 18;
  required uint64 award_value4 = 19;
  required uint64 award_size4 = 20;
}

//可配置限时商人
message CustomActivityOpenPurchaseInfo {
  required uint32 activity_id = 1;
  required uint32 id = 2;    //子活动id
  required uint32 type = 3;  //子活动类型1:直冲2:每日礼包
  required uint32 order = 4; //展示顺序
  required uint32 start_time = 5; //开始时间
  required uint32 finish_time = 6; //结束时间
  required uint32 price = 7; //充值金额
  required uint32 num = 8; //可完成次数
  required uint32 award_type1 = 9;
  required uint64 award_value1 = 10;
  required uint64 award_size1 = 11;
  required uint32 award_type2 = 12;
  required uint64 award_value2 = 13;
  required uint64 award_size2 = 14;
  required uint32 award_type3 = 15;
  required uint64 award_value3 = 16;
  required uint64 award_size3 = 17;
  required uint32 award_type4 = 18;
  required uint64 award_value4 = 19;
  required uint64 award_size4 = 20;
}

message CustomActivity {
  required uint32 act_id = 1; //主活动id
  required uint32 act_type = 2; //主活动类型
  required uint64 spec_val = 3; //特殊值(累计充值金额)
  repeated out_base.KV progress = 4; //活动状态(任务进度,兑换次数,充值次数)
  repeated uint32 awarded = 5; //活动奖励id(子活动)
  repeated out_base.KV special = 6; //特殊任务(任务id=>任务进度)(新充值类活动:任务id=>领取次数)
}

message Client {
  required string version  = 1; //游戏版本
  optional string ip = 2;   //客户端ip
  optional uint64 ad_id = 3; //广告id
  optional string bundle_id  = 4; //分包id
  optional string model = 5; //机型
  optional string device = 6; //设备号
  optional string device_tp = 7; //设备类型
  optional string device_os = 8; //操作系统
  optional string device_id = 9; //设备id
  optional string country = 10; //国家
  optional string region = 11; //地区
  optional string language = 12; //语种
  optional string time_zone = 13; //时区
  optional uint64 timestamp = 14; //0时区时间戳
  optional string spare_one = 15; //备用字段(json格式)
  optional uint64 op_id = 16; 
}

message QuestionnaireInfo {
  required uint32 id = 1; //唯一id
  required uint32 type = 2; //问卷类型
  required string content = 3; //问卷内容(url)
  required string remark = 4; //备注
  required uint32 start_time = 5; //开始时间
  required uint32 finish_time = 6; //结束时间
  required uint32 min_level = 7; //最小等级
  required uint32 max_level = 8; //最高等级
  required uint32 min_vip = 9; //最小vip
  required uint32 max_vip = 10; //最大vip
  required uint32 create_time = 11; //问卷创建时间
  required uint32 qid = 12; //问卷id
}

message SevendaysTask {
  required uint32 id = 1;	// 任务配置id
  required uint32 value = 2;	// 完成度
  required bool awarded = 3;	// 是否已领奖
}

message GuildStatue {
  repeated Portion portions = 1; //每个部件的id和铸造进度
  repeated uint64 acquired_user = 2; //已领取显灵宝箱的玩家
  repeated uint32 acquired_box = 3; //已领取的显灵宝箱id
  repeated uint32 acquired_pos = 4; //已领取的显灵宝箱的位置(从1开始)
}

message GuildStatueContribute {
  required uint64 member_id = 1; //成员id
  required uint32 contribute = 2; //贡献进度
  required uint32 cost_stone = 3; //消耗的石头
}

message Portion {
  required uint32 type = 1;//部件种类
  required uint32 base_id = 2;//部件id
  required uint32 progress = 3;//铸造进度
}

message GuildWorship {
  required uint32 reset_time = 1; //重置时间
  repeated uint32 awarded = 2; //已领取进度奖励索引
  repeated Status state = 3; //祭天任务状态(任务id=>完成次数)
}

message CollectRecord {
  required uint32 type = 1; //收集对象类型1:武将 2:兵符
  repeated uint32 advance_id = 2; //配置id
}

message CustomCollection {
  required uint32 id = 1; //活动id
  repeated uint32 awarded_id = 2; //已领取奖励任务id
  repeated CollectRecord records = 3; //已收集的武将或者兵符
}

message GuildStatueHint {
  repeated Portion portions = 1; //每个部件的id和铸造进度
  repeated uint32 awarded_stage = 2; //各个部件进度奖励标记
  optional bool awarded_final = 3; //显灵宝箱是否可领取
}

/*
//充值订阅 deprecated 使用月卡对象
message SubRecharge {
	required uint32 id = 1;//recharge_info 表里 id
	required uint32 due_time = 2;//到期时间
	required uint32 award_time = 3;//上次领奖时间
}
*/


// 攻城略地地图事件
message StormEvent {
  required uint32 cell_id = 1;	// 地图事件表的配置id
  required uint32 ev_id = 2;	// 事件表的配置id
  optional UserSnapshot enemy = 3;	// 挑战事件附带敌方玩家 *如果是挑战事件但是该字段为空,需要通过Storm_GetEnemy协议获取该事件的跨服玩家数据,在获取到数据前建议显示该玩家为正在加载
  repeated uint64 hp = 4; //血量继承
  optional uint64 max_hp = 5; //最大血量
  optional uint32 knight_group = 6; //阵营
}

// 战斗纪录
message BattleRecord {
  required uint32 function_id = 1;	// function id
  required uint64 record_id = 2;	// id
  optional uint64 battle_id = 3;	// 战报id
  optional UserSnapshot attacker = 4;
}

message RechargeNotify {
  required uint32 type = 1;//充值信息：索引对应enums里的RECHARGE_INFO_TYPE
  optional uint32 sub_type = 2;
  required uint32 value =3;
}

message StormSkill {
  required uint64 score = 1;
  required uint64 cost_score = 2;
  repeated uint32 ids = 3;
  repeated uint32 lvs = 4;
}

message OpenPurchaseDayTimes {
  required uint32 day = 1;
  required uint32 times = 2;
}

message OpenPurchaseInfo {
  required uint32 id = 1;
  optional uint32 last_get_time = 2; //上一次领取的时间
  optional uint32 times = 3;         //总共领取了几次
  repeated OpenPurchaseDayTimes day_times = 4;
}

message OpenPurchase {
  required uint32 activity_id = 1;
  repeated OpenPurchaseInfo open_purchase = 2;
}

message DayBoxInfo {
  required uint32 id = 1;
  required uint32 finish_times = 2;
  required uint32 times = 3;
}

message DayBox {
  required uint32 activity_id = 1;
  repeated DayBoxInfo day_info = 2;
}

message RecruitKnight {
  required uint32 activity_id = 1;    //活动id
  required uint32 score = 2;          //积分
  repeated uint32 ids = 3;            //已经领取的成就
  required uint32 times = 4;          //抽卡次数
  required uint32 lastFreeTime = 5;   //上一次免费领取的时间
}

message StormCityUnit {
  required uint64 id = 1; //玩家id
  required uint32 rank = 2; //玩家排名
  optional bool can_challenge = 3; //是否可挑战
  optional uint32 robot_id = 4; //机器人配置id
  optional out_base.UserSnapshot user = 5; //玩家快照
  optional uint32 city = 6; //城池id
}
